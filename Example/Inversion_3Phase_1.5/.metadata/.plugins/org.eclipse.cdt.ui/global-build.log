
**** Clean-only build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 clean -O 
 
DEL /F  "syscfg\board.h" "syscfg\pinmux.csv"  "empty_sysconfig_337zwt.hex"  "syscfg\board.c"  "empty_sysconfig_337zwt.out" 
DEL /F "syscfg\board.obj" "empty_sysconfig_main.obj" "nokia_5110.obj" "pid.obj" "device\F2837xD_CodeStartBranch.obj" "device\device.obj" 
DEL /F "syscfg\board.d" "empty_sysconfig_main.d" "nokia_5110.d" "pid.d" "device\device.d" 
DEL /F "device\F2837xD_CodeStartBranch.d" 
RMDIR /S/Q  "syscfg\" 
找不到 D:\CCS\workSpace\DSP\Inversion_3Phase_1.2\empty_sysconfig_337zwt\CPU1_RAM\empty_sysconfig_337zwt.hex
找不到 D:\CCS\workSpace\DSP\Inversion_3Phase_1.2\empty_sysconfig_337zwt\CPU1_RAM\device\F2837xD_CodeStartBranch.d
Finished clean
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../c2000.syscfg"
Invoking: SysConfig
"D:/CCS/ccs/utils/sysconfig_1.9.0/sysconfig_cli.bat" -s "D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/.metadata/sdk.json" -d "F2837xD" --script "D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/c2000.syscfg" -o "syscfg" --package F2837xD_337ZWT --part F2837xD_337ZWT --compiler ccs
Running script...
Validating...
Generating Code (c2000.syscfg)...
Writing D:\CCS\workSpace\DSP\Inversion_3Phase_1.2\empty_sysconfig_337zwt\CPU1_RAM\syscfg\board.c...
Writing D:\CCS\workSpace\DSP\Inversion_3Phase_1.2\empty_sysconfig_337zwt\CPU1_RAM\syscfg\board.h...
Writing D:\CCS\workSpace\DSP\Inversion_3Phase_1.2\empty_sysconfig_337zwt\CPU1_RAM\syscfg\pinmux.csv...
Finished building: "../c2000.syscfg"
 
Building file: "../protect.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="protect.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../protect.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'protect.obj' failed
"../protect.c", line 1: error #101: duplicate parameter name
"../protect.c", line 3: error #20: identifier "max" is undefined
2 errors detected in the compilation of "../protect.c".
gmake: *** [protect.obj] Error 1
Building file: "../device/F2837xD_CodeStartBranch.asm"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="device/F2837xD_CodeStartBranch.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg" --obj_directory="device"  "../device/F2837xD_CodeStartBranch.asm"
Finished building: "../device/F2837xD_CodeStartBranch.asm"
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 4 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 4 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 4 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 4 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 6 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 7 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 8 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 10 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 22 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 22 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 23 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 25 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 26 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building file: "../empty_sysconfig_main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="empty_sysconfig_main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../empty_sysconfig_main.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'empty_sysconfig_main.obj' failed
"..\protect.h", line 12: warning #1-D: last line of file ends without a newline
"../empty_sysconfig_main.c", line 532: warning #551-D: variable "pidAlfaCurrent" is used before its value is set
"../empty_sysconfig_main.c", line 533: warning #551-D: variable "pidBetaCurrent" is used before its value is set
"../empty_sysconfig_main.c", line 589: error #20: identifier "lastVinFlag" is undefined
"../empty_sysconfig_main.c", line 589: error #20: identifier "vinFlag" is undefined
"../empty_sysconfig_main.c", line 534: warning #179-D: variable "pPIDAlfaCurrent" was declared but never referenced
"../empty_sysconfig_main.c", line 535: warning #179-D: variable "pPIDBetaCurrent" was declared but never referenced
2 errors detected in the compilation of "../empty_sysconfig_main.c".
gmake: *** [empty_sysconfig_main.obj] Error 1
Building file: "syscfg/board.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="syscfg/board.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg" --obj_directory="syscfg"  "syscfg/board.c"
Finished building: "syscfg/board.c"
 
Building file: "../nokia_5110.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="nokia_5110.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../nokia_5110.c"
"../nokia_5110.c", line 383 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../nokia_5110.c", line 383 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../nokia_5110.c"
 
Building file: "../device/device.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="device/device.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg" --obj_directory="device"  "../device/device.c"
Finished building: "../device/device.c"
 
gmake: Target 'all' not remade because of errors.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../protect.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="protect.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../protect.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'protect.obj' failed
"../protect.c", line 1: error #101: duplicate parameter name
"../protect.c", line 3: error #20: identifier "max" is undefined
2 errors detected in the compilation of "../protect.c".
gmake: *** [protect.obj] Error 1
Building file: "../empty_sysconfig_main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="empty_sysconfig_main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../empty_sysconfig_main.c"
"..\protect.h", line 12: warning #1-D: last line of file ends without a newline
"../empty_sysconfig_main.c", line 532: warning #551-D: variable "pidAlfaCurrent" is used before its value is set
"../empty_sysconfig_main.c", line 533: warning #551-D: variable "pidBetaCurrent" is used before its value is set
"../empty_sysconfig_main.c", line 534: warning #179-D: variable "pPIDAlfaCurrent" was declared but never referenced
"../empty_sysconfig_main.c", line 535: warning #179-D: variable "pPIDBetaCurrent" was declared but never referenced
"../empty_sysconfig_main.c", line 49 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 49 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 49 (col. 40): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 49 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 49 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 49 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 50 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 50 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 50 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 52 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 53 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 60 (col. 7): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 61 (col. 7): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 61 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 61 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 61 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 62 (col. 7): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 62 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 62 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 62 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 64 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 65 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 66 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 495 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 495 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 496 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 496 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 497 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 497 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 498 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 498 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 499 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 499 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 499 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 499 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 499 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 500 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 500 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 500 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 500 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 500 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 501 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 501 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 501 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 501 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 501 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 502 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 502 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 502 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 532 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 532 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 532 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 532 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 533 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 533 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 533 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 533 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 563 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 563 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 564 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 564 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 571 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 571 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 571 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 572 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 572 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 572 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 573 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 573 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 573 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../empty_sysconfig_main.c"
 
gmake: Target 'all' not remade because of errors.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../protect.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="protect.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../protect.c"
"../protect.c", line 1 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../protect.c", line 1 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../protect.c", line 1 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../protect.c", line 3 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../protect.c", line 7 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../protect.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./empty_sysconfig_main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../position_transf.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="position_transf.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../position_transf.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'position_transf.obj' failed
"..\position_transf.h", line 26: warning #1-D: last line of file ends without a newline
"../position_transf.c", line 2: error #20: identifier "Phase2" is undefined
"../position_transf.c", line 2: error #20: identifier "Phase3" is undefined
"../position_transf.c", line 7: error #71: incomplete type is not allowed
"../position_transf.c", line 13: error #20: identifier "Phase3" is undefined
"../position_transf.c", line 13: error #20: identifier "Phase2" is undefined
"../position_transf.c", line 19: error #71: incomplete type is not allowed
"../position_transf.c", line 24: warning #1-D: last line of file ends without a newline
6 errors detected in the compilation of "../position_transf.c".
gmake: *** [position_transf.obj] Error 1
Building file: "../protect.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="protect.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../protect.c"
"..\protect.h", line 12: warning #1-D: last line of file ends without a newline
"../protect.c", line 2 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../protect.c", line 2 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../protect.c", line 2 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../protect.c", line 4 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../protect.c", line 8 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../protect.c"
 
Building file: "../empty_sysconfig_main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="empty_sysconfig_main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../empty_sysconfig_main.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'empty_sysconfig_main.obj' failed
"..\protect.h", line 12: warning #1-D: last line of file ends without a newline
"..\position_transf.h", line 26: warning #1-D: last line of file ends without a newline
"../empty_sysconfig_main.c", line 498: warning #551-D: variable "pidAlfaCurrent" is used before its value is set
"../empty_sysconfig_main.c", line 499: warning #551-D: variable "pidBetaCurrent" is used before its value is set
"../empty_sysconfig_main.c", line 529: error #20: identifier "refCurrent" is undefined
"../empty_sysconfig_main.c", line 529: error #20: identifier "Im" is undefined
"../empty_sysconfig_main.c", line 537: error #20: identifier "I_3Phase" is undefined
"../empty_sysconfig_main.c", line 500: warning #179-D: variable "pPIDAlfaCurrent" was declared but never referenced
"../empty_sysconfig_main.c", line 501: warning #179-D: variable "pPIDBetaCurrent" was declared but never referenced
3 errors detected in the compilation of "../empty_sysconfig_main.c".
gmake: *** [empty_sysconfig_main.obj] Error 1
gmake: Target 'all' not remade because of errors.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../position_transf.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="position_transf.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../position_transf.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'position_transf.obj' failed
"../position_transf.c", line 2: error #20: identifier "Phase3" is undefined
"../position_transf.c", line 3: error #20: identifier "Phase2" is undefined
"../position_transf.c", line 4: error #20: identifier "Phase2" is undefined
"../position_transf.c", line 5: error #20: identifier "Phase2" is undefined
"../position_transf.c", line 6: error #20: identifier "Phase3" is undefined
"../position_transf.c", line 7: error #20: identifier "Phase2" is undefined
"../position_transf.c", line 7: error #20: identifier "Phase3" is undefined
"../position_transf.c", line 12: error #71: incomplete type is not allowed
"../position_transf.c", line 18: error #20: identifier "Phase3" is undefined
"../position_transf.c", line 18: error #20: identifier "Phase2" is undefined
"../position_transf.c", line 24: error #71: incomplete type is not allowed
11 errors detected in the compilation of "../position_transf.c".
gmake: *** [position_transf.obj] Error 1
Building file: "../empty_sysconfig_main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="empty_sysconfig_main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../empty_sysconfig_main.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'empty_sysconfig_main.obj' failed
"..\protect.h", line 12: warning #1-D: last line of file ends without a newline
"../empty_sysconfig_main.c", line 498: warning #551-D: variable "pidAlfaCurrent" is used before its value is set
"../empty_sysconfig_main.c", line 499: warning #551-D: variable "pidBetaCurrent" is used before its value is set
"../empty_sysconfig_main.c", line 529: error #20: identifier "refCurrent" is undefined
"../empty_sysconfig_main.c", line 529: error #20: identifier "Im" is undefined
"../empty_sysconfig_main.c", line 537: error #20: identifier "I_3Phase" is undefined
"../empty_sysconfig_main.c", line 500: warning #179-D: variable "pPIDAlfaCurrent" was declared but never referenced
"../empty_sysconfig_main.c", line 501: warning #179-D: variable "pPIDBetaCurrent" was declared but never referenced
3 errors detected in the compilation of "../empty_sysconfig_main.c".
gmake: *** [empty_sysconfig_main.obj] Error 1
gmake: Target 'all' not remade because of errors.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../position_transf.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="position_transf.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../position_transf.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'position_transf.obj' failed
"../position_transf.c", line 3: error #20: identifier "Phase3" is undefined
"../position_transf.c", line 4: error #20: identifier "Phase2" is undefined
"../position_transf.c", line 5: error #20: identifier "Phase2" is undefined
"../position_transf.c", line 6: error #20: identifier "Phase2" is undefined
"../position_transf.c", line 7: error #20: identifier "Phase3" is undefined
"../position_transf.c", line 9: error #20: identifier "Phase2" is undefined
"../position_transf.c", line 9: error #20: identifier "Phase3" is undefined
"../position_transf.c", line 14: error #71: incomplete type is not allowed
"../position_transf.c", line 20: error #20: identifier "Phase3" is undefined
"../position_transf.c", line 20: error #20: identifier "Phase2" is undefined
"../position_transf.c", line 26: error #71: incomplete type is not allowed
11 errors detected in the compilation of "../position_transf.c".
gmake: *** [position_transf.obj] Error 1
Building file: "../empty_sysconfig_main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="empty_sysconfig_main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../empty_sysconfig_main.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'empty_sysconfig_main.obj' failed
"..\protect.h", line 12: warning #1-D: last line of file ends without a newline
"../empty_sysconfig_main.c", line 498: warning #551-D: variable "pidAlfaCurrent" is used before its value is set
"../empty_sysconfig_main.c", line 499: warning #551-D: variable "pidBetaCurrent" is used before its value is set
"../empty_sysconfig_main.c", line 529: error #20: identifier "refCurrent" is undefined
"../empty_sysconfig_main.c", line 529: error #20: identifier "Im" is undefined
"../empty_sysconfig_main.c", line 537: error #20: identifier "I_3Phase" is undefined
"../empty_sysconfig_main.c", line 500: warning #179-D: variable "pPIDAlfaCurrent" was declared but never referenced
"../empty_sysconfig_main.c", line 501: warning #179-D: variable "pPIDBetaCurrent" was declared but never referenced
3 errors detected in the compilation of "../empty_sysconfig_main.c".
gmake: *** [empty_sysconfig_main.obj] Error 1
gmake: Target 'all' not remade because of errors.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../position_transf.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="position_transf.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../position_transf.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'position_transf.obj' failed
"..\position_transf.h", line 21: warning #1-D: last line of file ends without a newline
"../position_transf.c", line 3: error #20: identifier "Phase3" is undefined
"../position_transf.c", line 4: error #20: identifier "Phase2" is undefined
"../position_transf.c", line 5: error #20: identifier "Phase2" is undefined
"../position_transf.c", line 6: error #20: identifier "Phase2" is undefined
"../position_transf.c", line 7: error #20: identifier "Phase3" is undefined
"../position_transf.c", line 9: error #20: identifier "Phase2" is undefined
"../position_transf.c", line 9: error #20: identifier "Phase3" is undefined
"../position_transf.c", line 14: error #71: incomplete type is not allowed
"../position_transf.c", line 20: error #20: identifier "Phase3" is undefined
"../position_transf.c", line 20: error #20: identifier "Phase2" is undefined
"../position_transf.c", line 26: error #71: incomplete type is not allowed
11 errors detected in the compilation of "../position_transf.c".
gmake: *** [position_transf.obj] Error 1
Building file: "../empty_sysconfig_main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="empty_sysconfig_main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../empty_sysconfig_main.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'empty_sysconfig_main.obj' failed
"..\protect.h", line 12: warning #1-D: last line of file ends without a newline
"..\position_transf.h", line 21: warning #1-D: last line of file ends without a newline
"../empty_sysconfig_main.c", line 498: warning #551-D: variable "pidAlfaCurrent" is used before its value is set
"../empty_sysconfig_main.c", line 499: warning #551-D: variable "pidBetaCurrent" is used before its value is set
"../empty_sysconfig_main.c", line 529: error #20: identifier "refCurrent" is undefined
"../empty_sysconfig_main.c", line 529: error #20: identifier "Im" is undefined
"../empty_sysconfig_main.c", line 537: error #20: identifier "I_3Phase" is undefined
"../empty_sysconfig_main.c", line 500: warning #179-D: variable "pPIDAlfaCurrent" was declared but never referenced
"../empty_sysconfig_main.c", line 501: warning #179-D: variable "pPIDBetaCurrent" was declared but never referenced
3 errors detected in the compilation of "../empty_sysconfig_main.c".
gmake: *** [empty_sysconfig_main.obj] Error 1
gmake: Target 'all' not remade because of errors.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../transform.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="transform.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../transform.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'transform.obj' failed
"../transform.c", line 3: error #20: identifier "Phase3" is undefined
"../transform.c", line 4: error #20: identifier "Phase2" is undefined
"../transform.c", line 5: error #20: identifier "Phase2" is undefined
"../transform.c", line 6: error #20: identifier "Phase2" is undefined
"../transform.c", line 7: error #20: identifier "Phase3" is undefined
"../transform.c", line 9: error #20: identifier "Phase2" is undefined
"../transform.c", line 9: error #20: identifier "Phase3" is undefined
"../transform.c", line 14: error #71: incomplete type is not allowed
"../transform.c", line 20: error #20: identifier "Phase3" is undefined
"../transform.c", line 20: error #20: identifier "Phase2" is undefined
"../transform.c", line 26: error #71: incomplete type is not allowed
11 errors detected in the compilation of "../transform.c".
gmake: *** [transform.obj] Error 1
Building file: "../empty_sysconfig_main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="empty_sysconfig_main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../empty_sysconfig_main.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'empty_sysconfig_main.obj' failed
"..\protect.h", line 12: warning #1-D: last line of file ends without a newline
"../empty_sysconfig_main.c", line 498: warning #551-D: variable "pidAlfaCurrent" is used before its value is set
"../empty_sysconfig_main.c", line 499: warning #551-D: variable "pidBetaCurrent" is used before its value is set
"../empty_sysconfig_main.c", line 529: error #20: identifier "refCurrent" is undefined
"../empty_sysconfig_main.c", line 529: error #20: identifier "Im" is undefined
"../empty_sysconfig_main.c", line 537: error #20: identifier "I_3Phase" is undefined
"../empty_sysconfig_main.c", line 500: warning #179-D: variable "pPIDAlfaCurrent" was declared but never referenced
"../empty_sysconfig_main.c", line 501: warning #179-D: variable "pPIDBetaCurrent" was declared but never referenced
3 errors detected in the compilation of "../empty_sysconfig_main.c".
gmake: *** [empty_sysconfig_main.obj] Error 1
gmake: Target 'all' not remade because of errors.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../transform.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="transform.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../transform.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'transform.obj' failed
"../transform.c", line 9: error #20: identifier "Phase2" is undefined
"../transform.c", line 9: error #20: identifier "Phase3" is undefined
"../transform.c", line 14: error #71: incomplete type is not allowed
"../transform.c", line 20: error #20: identifier "Phase3" is undefined
"../transform.c", line 20: error #20: identifier "Phase2" is undefined
"../transform.c", line 26: error #71: incomplete type is not allowed
"../transform.c", line 3: error #237: variable "I_3Phase" was declared with a never-completed type
"../transform.c", line 4: error #237: variable "I_2Phase" was declared with a never-completed type
"../transform.c", line 5: error #237: variable "refCurrent" was declared with a never-completed type
"../transform.c", line 6: error #237: variable "dutyRate_2Phase" was declared with a never-completed type
"../transform.c", line 7: error #237: variable "dutyRate_3Phase" was declared with a never-completed type
11 errors detected in the compilation of "../transform.c".
gmake: *** [transform.obj] Error 1
Building file: "../empty_sysconfig_main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="empty_sysconfig_main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../empty_sysconfig_main.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'empty_sysconfig_main.obj' failed
"..\protect.h", line 12: warning #1-D: last line of file ends without a newline
"../empty_sysconfig_main.c", line 498: warning #551-D: variable "pidAlfaCurrent" is used before its value is set
"../empty_sysconfig_main.c", line 499: warning #551-D: variable "pidBetaCurrent" is used before its value is set
"../empty_sysconfig_main.c", line 529: error #20: identifier "refCurrent" is undefined
"../empty_sysconfig_main.c", line 529: error #20: identifier "Im" is undefined
"../empty_sysconfig_main.c", line 537: error #20: identifier "I_3Phase" is undefined
"../empty_sysconfig_main.c", line 500: warning #179-D: variable "pPIDAlfaCurrent" was declared but never referenced
"../empty_sysconfig_main.c", line 501: warning #179-D: variable "pPIDBetaCurrent" was declared but never referenced
3 errors detected in the compilation of "../empty_sysconfig_main.c".
gmake: *** [empty_sysconfig_main.obj] Error 1
gmake: Target 'all' not remade because of errors.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../transform.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="transform.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../transform.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'transform.obj' failed
"../transform.c", line 3: error #20: identifier "Phase3" is undefined
"../transform.c", line 4: error #20: identifier "Phase2" is undefined
"../transform.c", line 5: error #20: identifier "Phase2" is undefined
"../transform.c", line 6: error #20: identifier "Phase2" is undefined
"../transform.c", line 7: error #20: identifier "Phase3" is undefined
"../transform.c", line 9: error #20: identifier "Phase2" is undefined
"../transform.c", line 9: error #20: identifier "Phase3" is undefined
"../transform.c", line 14: error #71: incomplete type is not allowed
"../transform.c", line 20: error #20: identifier "Phase3" is undefined
"../transform.c", line 20: error #20: identifier "Phase2" is undefined
"../transform.c", line 26: error #71: incomplete type is not allowed
11 errors detected in the compilation of "../transform.c".
gmake: *** [transform.obj] Error 1
Building file: "../empty_sysconfig_main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="empty_sysconfig_main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../empty_sysconfig_main.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'empty_sysconfig_main.obj' failed
"..\protect.h", line 12: warning #1-D: last line of file ends without a newline
"../empty_sysconfig_main.c", line 498: warning #551-D: variable "pidAlfaCurrent" is used before its value is set
"../empty_sysconfig_main.c", line 499: warning #551-D: variable "pidBetaCurrent" is used before its value is set
"../empty_sysconfig_main.c", line 529: error #20: identifier "refCurrent" is undefined
"../empty_sysconfig_main.c", line 529: error #20: identifier "Im" is undefined
"../empty_sysconfig_main.c", line 537: error #20: identifier "I_3Phase" is undefined
"../empty_sysconfig_main.c", line 500: warning #179-D: variable "pPIDAlfaCurrent" was declared but never referenced
"../empty_sysconfig_main.c", line 501: warning #179-D: variable "pPIDBetaCurrent" was declared but never referenced
3 errors detected in the compilation of "../empty_sysconfig_main.c".
gmake: *** [empty_sysconfig_main.obj] Error 1
gmake: Target 'all' not remade because of errors.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../transform.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="transform.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../transform.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'transform.obj' failed
"..\transform.h", line 40: error #37: the #if for this directive is missing
1 error detected in the compilation of "../transform.c".
gmake: *** [transform.obj] Error 1
Building file: "../empty_sysconfig_main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="empty_sysconfig_main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../empty_sysconfig_main.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'empty_sysconfig_main.obj' failed
"D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/transform.h", line 40: error #37: the #if for this directive is missing
"..\protect.h", line 12: warning #1-D: last line of file ends without a newline
"..\transform.h", line 24: error #102: "Phase3" has already been declared in the current scope
"..\transform.h", line 29: error #258: invalid redeclaration of type name "Phase3" (declared at line 29 of "D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/transform.h")
"..\transform.h", line 32: error #102: "Phase2" has already been declared in the current scope
"..\transform.h", line 36: error #258: invalid redeclaration of type name "Phase2" (declared at line 36 of "D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/transform.h")
"..\transform.h", line 38: error #148: declaration is incompatible with "Phase2 clarkTransformation(Phase3 *)" (declared at line 38 of "D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/transform.h")
"..\transform.h", line 39: error #148: declaration is incompatible with "Phase3 invClarkTransformation(Phase2 *)" (declared at line 39 of "D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/transform.h")
"..\transform.h", line 40: error #37: the #if for this directive is missing
"../empty_sysconfig_main.c", line 499: warning #551-D: variable "pidAlfaCurrent" is used before its value is set
"../empty_sysconfig_main.c", line 500: warning #551-D: variable "pidBetaCurrent" is used before its value is set
"../empty_sysconfig_main.c", line 530: error #20: identifier "refCurrent" is undefined
"../empty_sysconfig_main.c", line 530: error #20: identifier "Im" is undefined
"../empty_sysconfig_main.c", line 538: error #20: identifier "I_3Phase" is undefined
"../empty_sysconfig_main.c", line 501: warning #179-D: variable "pPIDAlfaCurrent" was declared but never referenced
"../empty_sysconfig_main.c", line 502: warning #179-D: variable "pPIDBetaCurrent" was declared but never referenced
11 errors detected in the compilation of "../empty_sysconfig_main.c".
gmake: *** [empty_sysconfig_main.obj] Error 1
gmake: Target 'all' not remade because of errors.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../transform.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="transform.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../transform.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'transform.obj' failed
"../transform.c", line 3: error #20: identifier "Phase3" is undefined
"../transform.c", line 4: error #20: identifier "Phase2" is undefined
"../transform.c", line 5: error #20: identifier "Phase2" is undefined
"../transform.c", line 6: error #20: identifier "Phase2" is undefined
"../transform.c", line 7: error #20: identifier "Phase3" is undefined
"../transform.c", line 9: error #20: identifier "Phase2" is undefined
"../transform.c", line 9: error #20: identifier "Phase3" is undefined
"../transform.c", line 14: error #71: incomplete type is not allowed
"../transform.c", line 20: error #20: identifier "Phase3" is undefined
"../transform.c", line 20: error #20: identifier "Phase2" is undefined
"../transform.c", line 26: error #71: incomplete type is not allowed
11 errors detected in the compilation of "../transform.c".
gmake: *** [transform.obj] Error 1
Building file: "../empty_sysconfig_main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="empty_sysconfig_main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../empty_sysconfig_main.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'empty_sysconfig_main.obj' failed
"..\protect.h", line 12: warning #1-D: last line of file ends without a newline
"../empty_sysconfig_main.c", line 499: warning #551-D: variable "pidAlfaCurrent" is used before its value is set
"../empty_sysconfig_main.c", line 500: warning #551-D: variable "pidBetaCurrent" is used before its value is set
"../empty_sysconfig_main.c", line 530: error #20: identifier "refCurrent" is undefined
"../empty_sysconfig_main.c", line 530: error #20: identifier "Im" is undefined
"../empty_sysconfig_main.c", line 538: error #20: identifier "I_3Phase" is undefined
"../empty_sysconfig_main.c", line 501: warning #179-D: variable "pPIDAlfaCurrent" was declared but never referenced
"../empty_sysconfig_main.c", line 502: warning #179-D: variable "pPIDBetaCurrent" was declared but never referenced
3 errors detected in the compilation of "../empty_sysconfig_main.c".
gmake: *** [empty_sysconfig_main.obj] Error 1
gmake: Target 'all' not remade because of errors.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../transform.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="transform.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../transform.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'transform.obj' failed
"../transform.c", line 5: error #20: identifier "Phase3" is undefined
"../transform.c", line 6: error #20: identifier "Phase2" is undefined
"../transform.c", line 7: error #20: identifier "Phase2" is undefined
"../transform.c", line 8: error #20: identifier "Phase2" is undefined
"../transform.c", line 9: error #20: identifier "Phase3" is undefined
"../transform.c", line 11: error #20: identifier "Phase2" is undefined
"../transform.c", line 11: error #20: identifier "Phase3" is undefined
"../transform.c", line 16: error #71: incomplete type is not allowed
"../transform.c", line 22: error #20: identifier "Phase3" is undefined
"../transform.c", line 22: error #20: identifier "Phase2" is undefined
"../transform.c", line 28: error #71: incomplete type is not allowed
11 errors detected in the compilation of "../transform.c".
gmake: *** [transform.obj] Error 1
Building file: "../empty_sysconfig_main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="empty_sysconfig_main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../empty_sysconfig_main.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'empty_sysconfig_main.obj' failed
"..\protect.h", line 12: warning #1-D: last line of file ends without a newline
"../empty_sysconfig_main.c", line 499: warning #551-D: variable "pidAlfaCurrent" is used before its value is set
"../empty_sysconfig_main.c", line 500: warning #551-D: variable "pidBetaCurrent" is used before its value is set
"../empty_sysconfig_main.c", line 530: error #20: identifier "refCurrent" is undefined
"../empty_sysconfig_main.c", line 530: error #20: identifier "Im" is undefined
"../empty_sysconfig_main.c", line 538: error #20: identifier "I_3Phase" is undefined
"../empty_sysconfig_main.c", line 501: warning #179-D: variable "pPIDAlfaCurrent" was declared but never referenced
"../empty_sysconfig_main.c", line 502: warning #179-D: variable "pPIDBetaCurrent" was declared but never referenced
3 errors detected in the compilation of "../empty_sysconfig_main.c".
gmake: *** [empty_sysconfig_main.obj] Error 1
gmake: Target 'all' not remade because of errors.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../transform.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="transform.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../transform.c"
"../transform.c", line 12 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 12 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 12 (col. 40): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 12 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 12 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 12 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 13 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 13 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 13 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 15 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 16 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 23 (col. 7): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 24 (col. 7): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 24 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 24 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 24 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 7): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 27 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 28 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../transform.c"
 
Building file: "../empty_sysconfig_main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="empty_sysconfig_main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../empty_sysconfig_main.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'empty_sysconfig_main.obj' failed
"..\protect.h", line 12: warning #1-D: last line of file ends without a newline
"..\transform.h", line 4: error #102: "Phase3" has already been declared in the current scope
"..\transform.h", line 9: error #258: invalid redeclaration of type name "Phase3" (declared at line 9 of "D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/transform.h")
"..\transform.h", line 12: error #102: "Phase2" has already been declared in the current scope
"..\transform.h", line 16: error #258: invalid redeclaration of type name "Phase2" (declared at line 16 of "D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/transform.h")
"..\transform.h", line 18: error #148: declaration is incompatible with "Phase2 sPhase2" (declared at line 18 of "D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/transform.h")
"..\transform.h", line 19: error #148: declaration is incompatible with "Phase2 clarkTransformation(Phase3 *)" (declared at line 19 of "D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/transform.h")
"..\transform.h", line 20: error #148: declaration is incompatible with "Phase3 invClarkTransformation(Phase2 *)" (declared at line 20 of "D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/transform.h")
"../empty_sysconfig_main.c", line 499: warning #551-D: variable "pidAlfaCurrent" is used before its value is set
"../empty_sysconfig_main.c", line 500: warning #551-D: variable "pidBetaCurrent" is used before its value is set
"../empty_sysconfig_main.c", line 530: error #20: identifier "refCurrent" is undefined
"../empty_sysconfig_main.c", line 530: error #20: identifier "Im" is undefined
"../empty_sysconfig_main.c", line 538: error #20: identifier "I_3Phase" is undefined
"../empty_sysconfig_main.c", line 501: warning #179-D: variable "pPIDAlfaCurrent" was declared but never referenced
"../empty_sysconfig_main.c", line 502: warning #179-D: variable "pPIDBetaCurrent" was declared but never referenced
10 errors detected in the compilation of "../empty_sysconfig_main.c".
gmake: *** [empty_sysconfig_main.obj] Error 1
gmake: Target 'all' not remade because of errors.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../transform.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="transform.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../transform.c"
"../transform.c", line 8 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 8 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 8 (col. 40): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 8 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 8 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 8 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 9 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 9 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 9 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 11 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 12 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 19 (col. 7): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 20 (col. 7): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 20 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 20 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 20 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 21 (col. 7): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 21 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 21 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 21 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 23 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 24 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../transform.c"
 
Building file: "../empty_sysconfig_main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="empty_sysconfig_main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../empty_sysconfig_main.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'empty_sysconfig_main.obj' failed
"..\protect.h", line 12: warning #1-D: last line of file ends without a newline
"..\transform.h", line 4: error #102: "Phase3" has already been declared in the current scope
"..\transform.h", line 9: error #258: invalid redeclaration of type name "Phase3" (declared at line 9 of "D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/transform.h")
"..\transform.h", line 12: error #102: "Phase2" has already been declared in the current scope
"..\transform.h", line 16: error #258: invalid redeclaration of type name "Phase2" (declared at line 16 of "D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/transform.h")
"..\transform.h", line 18: error #148: declaration is incompatible with "Phase3 I_3Phase" (declared at line 18 of "D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/transform.h")
"..\transform.h", line 19: error #148: declaration is incompatible with "Phase2 I_2Phase" (declared at line 19 of "D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/transform.h")
"..\transform.h", line 20: error #148: declaration is incompatible with "Phase2 refCurrent" (declared at line 20 of "D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/transform.h")
"..\transform.h", line 21: error #148: declaration is incompatible with "Phase2 dutyRate_2Phase" (declared at line 21 of "D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/transform.h")
"..\transform.h", line 22: error #148: declaration is incompatible with "Phase3 dutyRate_3Phase" (declared at line 22 of "D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/transform.h")
"..\transform.h", line 24: error #148: declaration is incompatible with "Phase2 sPhase2" (declared at line 24 of "D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/transform.h")
"..\transform.h", line 25: error #148: declaration is incompatible with "Phase2 clarkTransformation(Phase3 *)" (declared at line 25 of "D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/transform.h")
"..\transform.h", line 26: error #148: declaration is incompatible with "Phase3 invClarkTransformation(Phase2 *)" (declared at line 26 of "D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/transform.h")
"../empty_sysconfig_main.c", line 499: warning #551-D: variable "pidAlfaCurrent" is used before its value is set
"../empty_sysconfig_main.c", line 500: warning #551-D: variable "pidBetaCurrent" is used before its value is set
"../empty_sysconfig_main.c", line 530: error #20: identifier "Im" is undefined
"../empty_sysconfig_main.c", line 501: warning #179-D: variable "pPIDAlfaCurrent" was declared but never referenced
"../empty_sysconfig_main.c", line 502: warning #179-D: variable "pPIDBetaCurrent" was declared but never referenced
13 errors detected in the compilation of "../empty_sysconfig_main.c".
gmake: *** [empty_sysconfig_main.obj] Error 1
gmake: Target 'all' not remade because of errors.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../transform.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="transform.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../transform.c"
"../transform.c", line 27 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 27 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 27 (col. 40): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 27 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 27 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 27 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 28 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 28 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 28 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 30 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 31 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 7): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 39 (col. 7): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 39 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 39 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 39 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 40 (col. 7): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 40 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 40 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 40 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 42 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 43 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 44 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../transform.c"
 
Building file: "../empty_sysconfig_main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="empty_sysconfig_main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../empty_sysconfig_main.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'empty_sysconfig_main.obj' failed
"..\protect.h", line 12: warning #1-D: last line of file ends without a newline
"../empty_sysconfig_main.c", line 499: warning #551-D: variable "pidAlfaCurrent" is used before its value is set
"../empty_sysconfig_main.c", line 500: warning #551-D: variable "pidBetaCurrent" is used before its value is set
"../empty_sysconfig_main.c", line 530: error #20: identifier "refCurrent" is undefined
"../empty_sysconfig_main.c", line 530: error #20: identifier "Im" is undefined
"../empty_sysconfig_main.c", line 538: error #20: identifier "I_3Phase" is undefined
"../empty_sysconfig_main.c", line 501: warning #179-D: variable "pPIDAlfaCurrent" was declared but never referenced
"../empty_sysconfig_main.c", line 502: warning #179-D: variable "pPIDBetaCurrent" was declared but never referenced
3 errors detected in the compilation of "../empty_sysconfig_main.c".
gmake: *** [empty_sysconfig_main.obj] Error 1
gmake: Target 'all' not remade because of errors.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../protect.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="protect.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../protect.c"
"../protect.c", line 2 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../protect.c", line 2 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../protect.c", line 2 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../protect.c", line 4 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../protect.c", line 8 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../protect.c"
 
Building file: "../transform.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="transform.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../transform.c"
"../transform.c", line 28 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 28 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 28 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 28 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 28 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 28 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 31 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 32 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 39 (col. 7): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 40 (col. 7): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 40 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 40 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 40 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 7): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 43 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 44 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 45 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../transform.c"
 
Building file: "../empty_sysconfig_main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="empty_sysconfig_main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../empty_sysconfig_main.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'empty_sysconfig_main.obj' failed
"../empty_sysconfig_main.c", line 499: warning #551-D: variable "pidAlfaCurrent" is used before its value is set
"../empty_sysconfig_main.c", line 500: warning #551-D: variable "pidBetaCurrent" is used before its value is set
"../empty_sysconfig_main.c", line 530: error #20: identifier "refCurrent" is undefined
"../empty_sysconfig_main.c", line 530: error #20: identifier "Im" is undefined
"../empty_sysconfig_main.c", line 538: error #20: identifier "I_3Phase" is undefined
"../empty_sysconfig_main.c", line 501: warning #179-D: variable "pPIDAlfaCurrent" was declared but never referenced
"../empty_sysconfig_main.c", line 502: warning #179-D: variable "pPIDBetaCurrent" was declared but never referenced
3 errors detected in the compilation of "../empty_sysconfig_main.c".
gmake: *** [empty_sysconfig_main.obj] Error 1
gmake: Target 'all' not remade because of errors.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../empty_sysconfig_main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="empty_sysconfig_main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../empty_sysconfig_main.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'empty_sysconfig_main.obj' failed
"../empty_sysconfig_main.c", line 499: warning #551-D: variable "pidAlfaCurrent" is used before its value is set
"../empty_sysconfig_main.c", line 500: warning #551-D: variable "pidBetaCurrent" is used before its value is set
"../empty_sysconfig_main.c", line 530: error #20: identifier "refCurrent" is undefined
"../empty_sysconfig_main.c", line 538: error #20: identifier "I_3Phase" is undefined
"../empty_sysconfig_main.c", line 501: warning #179-D: variable "pPIDAlfaCurrent" was declared but never referenced
"../empty_sysconfig_main.c", line 502: warning #179-D: variable "pPIDBetaCurrent" was declared but never referenced
2 errors detected in the compilation of "../empty_sysconfig_main.c".
gmake: *** [empty_sysconfig_main.obj] Error 1
gmake: Target 'all' not remade because of errors.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../transform.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="transform.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../transform.c"
"../transform.c", line 23 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 23 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 23 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 23 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 23 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 23 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 24 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 24 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 24 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 27 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 34 (col. 7): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 35 (col. 7): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 35 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 35 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 35 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 36 (col. 7): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 36 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 36 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 36 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 39 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 40 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../transform.c"
 
Building file: "../empty_sysconfig_main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="empty_sysconfig_main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../empty_sysconfig_main.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'empty_sysconfig_main.obj' failed
"../empty_sysconfig_main.c", line 499: warning #551-D: variable "pidAlfaCurrent" is used before its value is set
"../empty_sysconfig_main.c", line 500: warning #551-D: variable "pidBetaCurrent" is used before its value is set
"../empty_sysconfig_main.c", line 530: error #20: identifier "refCurrent" is undefined
"../empty_sysconfig_main.c", line 538: error #20: identifier "I_3Phase" is undefined
"../empty_sysconfig_main.c", line 501: warning #179-D: variable "pPIDAlfaCurrent" was declared but never referenced
"../empty_sysconfig_main.c", line 502: warning #179-D: variable "pPIDBetaCurrent" was declared but never referenced
2 errors detected in the compilation of "../empty_sysconfig_main.c".
gmake: *** [empty_sysconfig_main.obj] Error 1
gmake: Target 'all' not remade because of errors.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../transform.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="transform.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../transform.c"
"../transform.c", line 27 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 27 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 27 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 27 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 27 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 27 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 28 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 28 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 28 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 30 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 31 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 7): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 39 (col. 7): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 39 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 39 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 39 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 40 (col. 7): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 40 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 40 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 40 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 42 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 43 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 44 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../transform.c"
 
Building file: "../empty_sysconfig_main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="empty_sysconfig_main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../empty_sysconfig_main.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'empty_sysconfig_main.obj' failed
"../empty_sysconfig_main.c", line 499: warning #551-D: variable "pidAlfaCurrent" is used before its value is set
"../empty_sysconfig_main.c", line 500: warning #551-D: variable "pidBetaCurrent" is used before its value is set
"../empty_sysconfig_main.c", line 530: error #20: identifier "refCurrent" is undefined
"../empty_sysconfig_main.c", line 538: error #20: identifier "I_3Phase" is undefined
"../empty_sysconfig_main.c", line 501: warning #179-D: variable "pPIDAlfaCurrent" was declared but never referenced
"../empty_sysconfig_main.c", line 502: warning #179-D: variable "pPIDBetaCurrent" was declared but never referenced
2 errors detected in the compilation of "../empty_sysconfig_main.c".
gmake: *** [empty_sysconfig_main.obj] Error 1
gmake: Target 'all' not remade because of errors.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../protect.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="protect.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../protect.c"
"../protect.c", line 6 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../protect.c", line 6 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../protect.c", line 6 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../protect.c", line 8 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../protect.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../protect.c"
 
Building file: "../transform.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="transform.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../transform.c"
"../transform.c", line 27 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 27 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 27 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 27 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 27 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 27 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 28 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 28 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 28 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 30 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 31 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 7): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 39 (col. 7): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 39 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 39 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 39 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 40 (col. 7): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 40 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 40 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 40 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 42 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 43 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 44 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../transform.c"
 
Building file: "../empty_sysconfig_main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="empty_sysconfig_main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../empty_sysconfig_main.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'empty_sysconfig_main.obj' failed
"../empty_sysconfig_main.c", line 499: warning #551-D: variable "pidAlfaCurrent" is used before its value is set
"../empty_sysconfig_main.c", line 500: warning #551-D: variable "pidBetaCurrent" is used before its value is set
"../empty_sysconfig_main.c", line 503: error #20: identifier "inFlag" is undefined
"../empty_sysconfig_main.c", line 531: error #20: identifier "refCurrent" is undefined
"../empty_sysconfig_main.c", line 539: error #20: identifier "I_3Phase" is undefined
"../empty_sysconfig_main.c", line 501: warning #179-D: variable "pPIDAlfaCurrent" was declared but never referenced
"../empty_sysconfig_main.c", line 502: warning #179-D: variable "pPIDBetaCurrent" was declared but never referenced
3 errors detected in the compilation of "../empty_sysconfig_main.c".
gmake: *** [empty_sysconfig_main.obj] Error 1
gmake: Target 'all' not remade because of errors.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../transform.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="transform.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../transform.c"
"../transform.c", line 28 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 28 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 28 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 28 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 28 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 28 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 31 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 32 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 39 (col. 7): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 40 (col. 7): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 40 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 40 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 40 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 7): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 43 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 44 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 45 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../transform.c"
 
Building file: "../empty_sysconfig_main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="empty_sysconfig_main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../empty_sysconfig_main.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'empty_sysconfig_main.obj' failed
"../empty_sysconfig_main.c", line 499: warning #551-D: variable "pidAlfaCurrent" is used before its value is set
"../empty_sysconfig_main.c", line 500: warning #551-D: variable "pidBetaCurrent" is used before its value is set
"../empty_sysconfig_main.c", line 531: error #20: identifier "refCurrent" is undefined
"../empty_sysconfig_main.c", line 539: error #20: identifier "I_3Phase" is undefined
"../empty_sysconfig_main.c", line 501: warning #179-D: variable "pPIDAlfaCurrent" was declared but never referenced
"../empty_sysconfig_main.c", line 502: warning #179-D: variable "pPIDBetaCurrent" was declared but never referenced
2 errors detected in the compilation of "../empty_sysconfig_main.c".
gmake: *** [empty_sysconfig_main.obj] Error 1
gmake: Target 'all' not remade because of errors.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../transform.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="transform.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../transform.c"
"../transform.c", line 28 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 28 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 28 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 28 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 28 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 28 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 31 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 32 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 39 (col. 7): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 40 (col. 7): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 40 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 40 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 40 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 7): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 43 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 44 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 45 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../transform.c"
 
Building file: "../empty_sysconfig_main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="empty_sysconfig_main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../empty_sysconfig_main.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'empty_sysconfig_main.obj' failed
"../empty_sysconfig_main.c", line 499: warning #551-D: variable "pidAlfaCurrent" is used before its value is set
"../empty_sysconfig_main.c", line 500: warning #551-D: variable "pidBetaCurrent" is used before its value is set
"../empty_sysconfig_main.c", line 531: error #20: identifier "refCurrent" is undefined
"../empty_sysconfig_main.c", line 539: error #20: identifier "I_3Phase" is undefined
"../empty_sysconfig_main.c", line 501: warning #179-D: variable "pPIDAlfaCurrent" was declared but never referenced
"../empty_sysconfig_main.c", line 502: warning #179-D: variable "pPIDBetaCurrent" was declared but never referenced
2 errors detected in the compilation of "../empty_sysconfig_main.c".
gmake: *** [empty_sysconfig_main.obj] Error 1
gmake: Target 'all' not remade because of errors.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../transform.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="transform.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../transform.c"
"../transform.c", line 28 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 28 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 28 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 28 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 28 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 28 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 31 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 32 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 39 (col. 7): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 40 (col. 7): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 40 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 40 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 40 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 7): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 43 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 44 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 45 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../transform.c"
 
Building file: "../empty_sysconfig_main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="empty_sysconfig_main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../empty_sysconfig_main.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'empty_sysconfig_main.obj' failed
"../empty_sysconfig_main.c", line 499: warning #551-D: variable "pidAlfaCurrent" is used before its value is set
"../empty_sysconfig_main.c", line 500: warning #551-D: variable "pidBetaCurrent" is used before its value is set
"../empty_sysconfig_main.c", line 531: error #20: identifier "refCurrent" is undefined
"../empty_sysconfig_main.c", line 539: error #20: identifier "I_3Phase" is undefined
"../empty_sysconfig_main.c", line 501: warning #179-D: variable "pPIDAlfaCurrent" was declared but never referenced
"../empty_sysconfig_main.c", line 502: warning #179-D: variable "pPIDBetaCurrent" was declared but never referenced
2 errors detected in the compilation of "../empty_sysconfig_main.c".
gmake: *** [empty_sysconfig_main.obj] Error 1
gmake: Target 'all' not remade because of errors.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../protect.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="protect.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../protect.c"
"../protect.c", line 6 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../protect.c", line 6 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../protect.c", line 6 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../protect.c", line 8 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../protect.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../protect.c"
 
Building file: "../empty_sysconfig_main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="empty_sysconfig_main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../empty_sysconfig_main.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'empty_sysconfig_main.obj' failed
"../empty_sysconfig_main.c", line 499: warning #551-D: variable "pidAlfaCurrent" is used before its value is set
"../empty_sysconfig_main.c", line 500: warning #551-D: variable "pidBetaCurrent" is used before its value is set
"../empty_sysconfig_main.c", line 530: error #20: identifier "inFlag" is undefined
"../empty_sysconfig_main.c", line 532: error #20: identifier "refCurrent" is undefined
"../empty_sysconfig_main.c", line 540: error #20: identifier "I_3Phase" is undefined
"../empty_sysconfig_main.c", line 501: warning #179-D: variable "pPIDAlfaCurrent" was declared but never referenced
"../empty_sysconfig_main.c", line 502: warning #179-D: variable "pPIDBetaCurrent" was declared but never referenced
3 errors detected in the compilation of "../empty_sysconfig_main.c".
gmake: *** [empty_sysconfig_main.obj] Error 1
gmake: Target 'all' not remade because of errors.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../protect.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="protect.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../protect.c"
"../protect.c", line 6 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../protect.c", line 6 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../protect.c", line 6 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../protect.c", line 8 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../protect.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../protect.c"
 
Building file: "../empty_sysconfig_main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="empty_sysconfig_main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../empty_sysconfig_main.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'empty_sysconfig_main.obj' failed
"../empty_sysconfig_main.c", line 499: warning #551-D: variable "pidAlfaCurrent" is used before its value is set
"../empty_sysconfig_main.c", line 500: warning #551-D: variable "pidBetaCurrent" is used before its value is set
"../empty_sysconfig_main.c", line 532: error #20: identifier "refCurrent" is undefined
"../empty_sysconfig_main.c", line 540: error #20: identifier "I_3Phase" is undefined
"../empty_sysconfig_main.c", line 501: warning #179-D: variable "pPIDAlfaCurrent" was declared but never referenced
"../empty_sysconfig_main.c", line 502: warning #179-D: variable "pPIDBetaCurrent" was declared but never referenced
2 errors detected in the compilation of "../empty_sysconfig_main.c".
gmake: *** [empty_sysconfig_main.obj] Error 1
gmake: Target 'all' not remade because of errors.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../empty_sysconfig_main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="empty_sysconfig_main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../empty_sysconfig_main.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'empty_sysconfig_main.obj' failed
"../empty_sysconfig_main.c", line 499: warning #551-D: variable "pidAlfaCurrent" is used before its value is set
"../empty_sysconfig_main.c", line 500: warning #551-D: variable "pidBetaCurrent" is used before its value is set
"../empty_sysconfig_main.c", line 530: error #20: identifier "inFlag" is undefined
"../empty_sysconfig_main.c", line 532: error #20: identifier "refCurrent" is undefined
"../empty_sysconfig_main.c", line 540: error #20: identifier "I_3Phase" is undefined
"../empty_sysconfig_main.c", line 501: warning #179-D: variable "pPIDAlfaCurrent" was declared but never referenced
"../empty_sysconfig_main.c", line 502: warning #179-D: variable "pPIDBetaCurrent" was declared but never referenced
3 errors detected in the compilation of "../empty_sysconfig_main.c".
gmake: *** [empty_sysconfig_main.obj] Error 1
gmake: Target 'all' not remade because of errors.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../protect.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="protect.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../protect.c"
"../protect.c", line 6 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../protect.c", line 6 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../protect.c", line 6 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../protect.c", line 8 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../protect.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../protect.c"
 
Building file: "../empty_sysconfig_main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="empty_sysconfig_main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../empty_sysconfig_main.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'empty_sysconfig_main.obj' failed
"../empty_sysconfig_main.c", line 499: warning #551-D: variable "pidAlfaCurrent" is used before its value is set
"../empty_sysconfig_main.c", line 500: warning #551-D: variable "pidBetaCurrent" is used before its value is set
"../empty_sysconfig_main.c", line 532: error #20: identifier "refCurrent" is undefined
"../empty_sysconfig_main.c", line 540: error #20: identifier "I_3Phase" is undefined
"../empty_sysconfig_main.c", line 501: warning #179-D: variable "pPIDAlfaCurrent" was declared but never referenced
"../empty_sysconfig_main.c", line 502: warning #179-D: variable "pPIDBetaCurrent" was declared but never referenced
2 errors detected in the compilation of "../empty_sysconfig_main.c".
gmake: *** [empty_sysconfig_main.obj] Error 1
gmake: Target 'all' not remade because of errors.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../transform.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="transform.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../transform.c"
"../transform.c", line 9: warning #303-D: typedef name has already been declared (with same type)
"../transform.c", line 16: warning #303-D: typedef name has already been declared (with same type)
"../transform.c", line 28 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 28 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 28 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 28 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 28 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 28 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 31 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 32 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 39 (col. 7): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 40 (col. 7): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 40 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 40 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 40 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 7): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 43 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 44 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 45 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../transform.c"
 
Building file: "../empty_sysconfig_main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="empty_sysconfig_main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../empty_sysconfig_main.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'empty_sysconfig_main.obj' failed
"../empty_sysconfig_main.c", line 499: warning #551-D: variable "pidAlfaCurrent" is used before its value is set
"../empty_sysconfig_main.c", line 500: warning #551-D: variable "pidBetaCurrent" is used before its value is set
"../empty_sysconfig_main.c", line 532: error #71: incomplete type is not allowed
"../empty_sysconfig_main.c", line 533: error #71: incomplete type is not allowed
"../empty_sysconfig_main.c", line 540: error #71: incomplete type is not allowed
"../empty_sysconfig_main.c", line 541: error #71: incomplete type is not allowed
"../empty_sysconfig_main.c", line 542: error #71: incomplete type is not allowed
"../empty_sysconfig_main.c", line 501: warning #179-D: variable "pPIDAlfaCurrent" was declared but never referenced
"../empty_sysconfig_main.c", line 502: warning #179-D: variable "pPIDBetaCurrent" was declared but never referenced
5 errors detected in the compilation of "../empty_sysconfig_main.c".
gmake: *** [empty_sysconfig_main.obj] Error 1
gmake: Target 'all' not remade because of errors.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../transform.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="transform.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../transform.c"
"../transform.c", line 13 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 13 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 13 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 13 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 13 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 13 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 14 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 14 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 14 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 16 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 17 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 24 (col. 7): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 7): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 7): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 28 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 30 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../transform.c"
 
Building file: "../empty_sysconfig_main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="empty_sysconfig_main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../empty_sysconfig_main.c"
"../empty_sysconfig_main.c", line 499: warning #551-D: variable "pidAlfaCurrent" is used before its value is set
"../empty_sysconfig_main.c", line 500: warning #551-D: variable "pidBetaCurrent" is used before its value is set
"../empty_sysconfig_main.c", line 501: warning #179-D: variable "pPIDAlfaCurrent" was declared but never referenced
"../empty_sysconfig_main.c", line 502: warning #179-D: variable "pPIDBetaCurrent" was declared but never referenced
"../empty_sysconfig_main.c", line 462 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 462 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 463 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 463 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 464 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 464 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 465 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 465 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 466 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 466 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 466 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 466 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 466 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 467 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 467 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 467 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 467 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 467 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 468 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 468 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 468 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 468 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 468 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 469 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 469 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 469 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 499 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 499 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 499 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 499 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 500 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 500 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 500 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 500 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 532 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 532 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 533 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 533 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 540 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 540 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 540 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 541 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 541 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 541 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 542 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 542 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 542 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../empty_sysconfig_main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./empty_sysconfig_main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'pid.obj' failed
"../pid.c", line 6: error #150: variable "pPIDAlfaCurrent" has already been initialized
"../pid.c", line 7: error #150: variable "pPIDBetaCurrent" has already been initialized
2 errors detected in the compilation of "../pid.c".
gmake: *** [pid.obj] Error 1
Building file: "../protect.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="protect.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../protect.c"
"../protect.c", line 6 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../protect.c", line 6 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../protect.c", line 6 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../protect.c", line 8 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../protect.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../protect.c"
 
Building file: "../empty_sysconfig_main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="empty_sysconfig_main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../empty_sysconfig_main.c"
"../empty_sysconfig_main.c", line 465 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 465 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 466 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 466 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 467 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 467 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 468 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 468 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 469 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 469 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 469 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 469 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 469 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 470 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 470 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 470 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 470 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 470 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 471 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 471 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 471 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 471 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 471 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 472 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 472 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 472 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 503 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 503 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 504 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 504 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 511 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 511 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 511 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 512 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 512 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 512 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 513 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 513 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 513 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../empty_sysconfig_main.c"
 
gmake: Target 'all' not remade because of errors.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 20 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building file: "../empty_sysconfig_main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="empty_sysconfig_main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../empty_sysconfig_main.c"
"../empty_sysconfig_main.c", line 465 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 465 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 466 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 466 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 467 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 467 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 468 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 468 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 469 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 469 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 469 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 469 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 469 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 470 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 470 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 470 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 470 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 470 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 471 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 471 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 471 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 471 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 471 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 472 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 472 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 472 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 503 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 503 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 504 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 504 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 511 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 511 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 511 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 512 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 512 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 512 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 513 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 513 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../empty_sysconfig_main.c", line 513 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../empty_sysconfig_main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./empty_sysconfig_main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 7 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 7 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 7 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 7 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 10 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 22 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 22 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 22 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 25 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 25 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 26 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 465 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 465 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 466 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 466 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 467 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 467 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 468 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 468 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 503 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 503 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 504 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 504 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 511 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 511 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 511 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 512 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 512 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 512 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 513 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 513 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 513 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../transform.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="transform.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../transform.c"
"../transform.c", line 13 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 13 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 13 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 13 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 13 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 13 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 14 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 14 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 14 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 16 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 17 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 24 (col. 7): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 7): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 7): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 28 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 30 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../transform.c"
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 466 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 466 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 467 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 467 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 468 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 468 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 504 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 504 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 505 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 505 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 512 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 512 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 512 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 513 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 513 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 513 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 514 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 514 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 514 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 529 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 530 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 531 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../transform.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="transform.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../transform.c"
"../transform.c", line 13 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 13 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 13 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 13 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 13 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 13 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 14 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 14 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 14 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 16 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 17 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 24 (col. 7): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 7): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 7): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 28 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 30 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../transform.c"
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 467 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 467 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 468 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 468 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 505 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 505 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 514 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 514 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 514 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 515 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 515 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 515 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 531 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 532 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 533 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
 
 undefined    first referenced
  symbol          in file     
 ---------    ----------------
 p2refCurrent ./main.obj      
 
error #10234-D: unresolved symbols remain
error #10010: errors encountered during linking; "empty_sysconfig_337zwt.out" not built
 
>> Compilation failure
makefile:151: recipe for target 'empty_sysconfig_337zwt.out' failed
gmake[1]: *** [empty_sysconfig_337zwt.out] Error 1
makefile:147: recipe for target 'all' failed
gmake: *** [all] Error 2

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../transform.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="transform.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../transform.c"
"../transform.c", line 13 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 13 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 13 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 13 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 13 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 13 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 14 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 14 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 14 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 16 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 17 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 24 (col. 7): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 7): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 7): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 28 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 30 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../transform.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../transform.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="transform.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../transform.c"
"../transform.c", line 14 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 14 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 14 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 14 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 14 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 14 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 15 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 15 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 15 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 17 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 18 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 7): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 7): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 27 (col. 7): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 27 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 27 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 27 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 30 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 31 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../transform.c"
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 467 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 467 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 468 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 468 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 505 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 505 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 46): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for FP division.
"../main.c", line 516 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 536 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 536 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 536 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 536 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 542 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 543 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 544 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 467 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 467 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 468 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 468 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 505 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 505 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 46): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for FP division.
"../main.c", line 516 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 536 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 536 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 536 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 536 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 542 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 543 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 544 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 547 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 547 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 548 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 548 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 549 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 549 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 467 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 467 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 468 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 468 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 505 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 505 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 46): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for FP division.
"../main.c", line 516 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 536 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 536 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 536 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 536 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 542 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 543 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 544 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 547 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 547 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 548 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 548 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 549 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 549 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 467 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 467 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 468 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 468 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 505 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 505 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 46): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for FP division.
"../main.c", line 516 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
gmake[1]: 'empty_sysconfig_337zwt.out' is up to date.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
gmake[1]: 'empty_sysconfig_337zwt.out' is up to date.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
gmake[1]: 'empty_sysconfig_337zwt.out' is up to date.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 467 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 467 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 468 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 468 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 505 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 505 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 46): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for FP division.
"../main.c", line 516 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 536 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 536 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 536 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 536 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 542 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 543 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 544 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 547 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 547 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 548 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 548 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 549 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 549 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 552 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 552 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 553 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 553 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 554 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 554 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
gmake[1]: 'empty_sysconfig_337zwt.out' is up to date.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
gmake[1]: 'empty_sysconfig_337zwt.out' is up to date.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
gmake[1]: 'empty_sysconfig_337zwt.out' is up to date.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 467 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 467 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 468 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 468 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 505 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 505 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 536 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 536 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 536 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 536 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 542 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 543 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 544 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 547 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 547 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 548 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 548 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 549 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 549 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 552 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 552 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 553 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 553 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 554 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 554 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 467 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 467 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 468 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 468 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 505 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 505 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 536 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 536 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 536 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 536 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 542 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 543 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 544 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 547 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 547 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 548 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 548 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 549 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 549 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 551 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 551 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 552 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 552 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 553 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 553 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 556 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 556 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 557 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 557 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 558 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 558 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'main.obj' failed
"../main.c", line 350: error #20: identifier "EPWM_AQ_OUTPUT_ON_TIMEBASE_UP_CMPC" is undefined
"../main.c", line 354: error #20: identifier "EPWM_AQ_OUTPUT_ON_TIMEBASE_DOWN_CMPC" is undefined
2 errors detected in the compilation of "../main.c".
gmake: *** [main.obj] Error 1
gmake: Target 'all' not remade because of errors.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 467 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 467 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 468 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 468 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 505 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 505 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 536 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 536 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 536 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 536 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 542 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 543 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 544 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 547 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 547 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 548 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 548 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 549 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 549 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 551 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 551 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 552 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 552 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 553 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 553 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 556 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 556 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 557 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 557 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 558 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 558 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 467 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 467 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 468 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 468 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 505 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 505 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 467 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 467 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 468 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 468 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 505 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 505 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
gmake[1]: 'empty_sysconfig_337zwt.out' is up to date.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 467 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 467 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 468 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 468 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 505 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 505 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 536 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 536 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 536 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 536 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 542 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 543 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 544 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 547 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 547 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 548 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 548 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 549 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 549 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 551 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 551 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 552 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 552 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 553 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 553 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 556 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 556 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 557 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 557 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 558 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 558 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 467 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 467 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 468 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 468 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 505 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 505 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 46): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for FP division.
"../main.c", line 516 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 547 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 547 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 548 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 548 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 549 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 549 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 551 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 551 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 552 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 552 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 553 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 553 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 556 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 556 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 557 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 557 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 558 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 558 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 467 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 467 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 468 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 468 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 505 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 505 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 509 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 510 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 511 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 46): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for FP division.
"../main.c", line 518 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 549 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 549 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 550 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 550 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 551 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 551 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 553 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 553 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 554 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 554 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 555 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 555 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 558 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 558 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 559 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 559 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
"../2837xD_RAM_lnk_cpu1.cmd", line 75: error #10099-D: program will not fit into available memory, or the section contains a call site that requires a trampoline that can't be generated for this section. run placement with alignment/blocking fails for section ".data" size 0x101apage 1.  Available memory ranges:
   RAMLS5       size: 0x800        unused: 0x800        max hole: 0x800     
   RAMGS8       size: 0x1000       unused: 0x1000       max hole: 0x1000    
error #10010: errors encountered during linking; "empty_sysconfig_337zwt.out" not built
 
>> Compilation failure
makefile:151: recipe for target 'empty_sysconfig_337zwt.out' failed
gmake[1]: *** [empty_sysconfig_337zwt.out] Error 1
makefile:147: recipe for target 'all' failed
gmake: *** [all] Error 2

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
"../2837xD_RAM_lnk_cpu1.cmd", line 75: warning #10097: memory range not found: RAMLS11 on page 1
"../2837xD_RAM_lnk_cpu1.cmd", line 75: error #10099-D: program will not fit into available memory, or the section contains a call site that requires a trampoline that can't be generated for this section. run placement with alignment/blocking fails for section ".data" size 0x101apage 1.  Available memory ranges:
   RAMLS5       size: 0x800        unused: 0x800        max hole: 0x800     
   RAMGS8       size: 0x1000       unused: 0x1000       max hole: 0x1000    
error #10010: errors encountered during linking; "empty_sysconfig_337zwt.out" not built
 
>> Compilation failure
makefile:151: recipe for target 'empty_sysconfig_337zwt.out' failed
gmake[1]: *** [empty_sysconfig_337zwt.out] Error 1
makefile:147: recipe for target 'all' failed
gmake: *** [all] Error 2

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
"../2837xD_RAM_lnk_cpu1.cmd", line 75: error #10099-D: program will not fit into available memory, or the section contains a call site that requires a trampoline that can't be generated for this section. run placement with alignment/blocking fails for section ".data" size 0x101apage 1.  Available memory ranges:
   RAMLS5       size: 0x800        unused: 0x800        max hole: 0x800     
   RAMGS8       size: 0x1000       unused: 0x1000       max hole: 0x1000    
   RAMGS11      size: 0x1000       unused: 0x1000       max hole: 0x1000    
error #10010: errors encountered during linking; "empty_sysconfig_337zwt.out" not built
 
>> Compilation failure
makefile:151: recipe for target 'empty_sysconfig_337zwt.out' failed
makefile:147: recipe for target 'all' failed
gmake[1]: *** [empty_sysconfig_337zwt.out] Error 1
gmake: *** [all] Error 2

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
"../2837xD_RAM_lnk_cpu1.cmd", line 75: error #10099-D: program will not fit into available memory, or the section contains a call site that requires a trampoline that can't be generated for this section. run placement with alignment/blocking fails for section ".data" size 0x101apage 1.  Available memory ranges:
   RAMLS5       size: 0x800        unused: 0x800        max hole: 0x800     
   RAMGS8       size: 0x1000       unused: 0x1000       max hole: 0x1000    
   RAMGS11      size: 0x1000       unused: 0x1000       max hole: 0x1000    
   RAMGS12      size: 0x1000       unused: 0x1000       max hole: 0x1000    
error #10010: errors encountered during linking; "empty_sysconfig_337zwt.out" not built
 
>> Compilation failure
makefile:151: recipe for target 'empty_sysconfig_337zwt.out' failed
gmake[1]: *** [empty_sysconfig_337zwt.out] Error 1
makefile:147: recipe for target 'all' failed
gmake: *** [all] Error 2

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
"../2837xD_RAM_lnk_cpu1.cmd", line 75: error #10099-D: program will not fit into available memory, or the section contains a call site that requires a trampoline that can't be generated for this section. run placement with alignment/blocking fails for section ".data" size 0x101apage 1.  Available memory ranges:
   RAMLS5       size: 0x800        unused: 0x800        max hole: 0x800     
   RAMGS8       size: 0x1000       unused: 0x1000       max hole: 0x1000    
   RAMGS11      size: 0x1000       unused: 0x1000       max hole: 0x1000    
   RAMGS12      size: 0x1000       unused: 0x1000       max hole: 0x1000    
   RAMGS13      size: 0x1000       unused: 0x1000       max hole: 0x1000    
error #10010: errors encountered during linking; "empty_sysconfig_337zwt.out" not built
 
>> Compilation failure
makefile:151: recipe for target 'empty_sysconfig_337zwt.out' failed
makefile:147: recipe for target 'all' failed
gmake[1]: *** [empty_sysconfig_337zwt.out] Error 1
gmake: *** [all] Error 2

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
"../2837xD_RAM_lnk_cpu1.cmd", line 75: error #10099-D: program will not fit into available memory, or the section contains a call site that requires a trampoline that can't be generated for this section. run placement with alignment/blocking fails for section ".data" size 0x101apage 1.  Available memory ranges:
   RAMLS5       size: 0x800        unused: 0x800        max hole: 0x800     
   RAMGS8       size: 0x1000       unused: 0x1000       max hole: 0x1000    
   RAMGS11      size: 0x1000       unused: 0x1000       max hole: 0x1000    
   RAMGS12      size: 0x1000       unused: 0x1000       max hole: 0x1000    
   RAMGS13      size: 0x1000       unused: 0x1000       max hole: 0x1000    
   RAMGS14      size: 0x1000       unused: 0x1000       max hole: 0x1000    
error #10010: errors encountered during linking; "empty_sysconfig_337zwt.out" not built
 
>> Compilation failure
makefile:151: recipe for target 'empty_sysconfig_337zwt.out' failed
gmake[1]: *** [empty_sysconfig_337zwt.out] Error 1
makefile:147: recipe for target 'all' failed
gmake: *** [all] Error 2

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 467 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 467 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 468 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 468 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 505 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 505 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 505 (col. 39): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 39): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 509 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 509 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 510 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 510 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 511 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 511 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 46): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for FP division.
"../main.c", line 518 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 549 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 549 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 550 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 550 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 551 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 551 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 553 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 553 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 554 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 554 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 555 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 555 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 558 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 558 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 559 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 559 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
gmake[1]: 'empty_sysconfig_337zwt.out' is up to date.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
gmake[1]: 'empty_sysconfig_337zwt.out' is up to date.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 7 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 7 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 7 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 7 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 10 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 22 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 22 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 22 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 25 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 25 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 26 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'main.obj' failed
"../main.c", line 547: error #29: expected an expression
"../main.c", line 558: warning #12-D: parsing restarts here after previous syntax error
1 error detected in the compilation of "../main.c".
gmake: *** [main.obj] Error 1
gmake: Target 'all' not remade because of errors.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 467 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 467 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 468 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 468 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 505 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 505 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 505 (col. 39): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 39): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 509 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 509 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 510 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 510 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 511 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 511 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 46): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for FP division.
"../main.c", line 518 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 537 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 537 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 537 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 537 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 538 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 538 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 538 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 538 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 544 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 545 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 546 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 549 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 549 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 550 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 550 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 551 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 551 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 553 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 553 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 554 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 554 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 555 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 555 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 558 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 558 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 559 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 559 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 467 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 467 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 468 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 468 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 505 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 505 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 505 (col. 39): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 39): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 509 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 509 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 510 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 510 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 511 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 511 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 46): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for FP division.
"../main.c", line 518 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 537 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 537 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 537 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 537 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 538 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 538 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 538 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 538 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 544 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 545 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 546 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 549 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 549 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 550 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 550 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 551 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 551 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 553 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 553 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 554 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 554 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 555 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 555 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 558 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 558 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 559 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 559 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'main.obj' failed
"../main.c", line 570: error #66: expected a ";"
1 error detected in the compilation of "../main.c".
gmake: *** [main.obj] Error 1
gmake: Target 'all' not remade because of errors.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 467 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 467 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 468 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 468 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 505 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 505 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 505 (col. 39): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 39): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 509 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 509 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 510 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 510 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 511 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 511 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 46): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for FP division.
"../main.c", line 518 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 538 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 538 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 538 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 538 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 545 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 546 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 547 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 550 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 550 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 551 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 551 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 552 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 552 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 554 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 554 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 555 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 555 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 556 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 556 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 559 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 559 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 561 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 561 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 467 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 467 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 468 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 468 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 505 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 505 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 505 (col. 39): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 39): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 509 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 509 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 510 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 510 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 511 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 511 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 538 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 538 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 538 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 538 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 545 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 546 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 547 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 550 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 550 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 551 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 551 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 552 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 552 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 554 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 554 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 555 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 555 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 556 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 556 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 559 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 559 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 561 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 561 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
gmake[1]: 'empty_sysconfig_337zwt.out' is up to date.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
gmake[1]: 'empty_sysconfig_337zwt.out' is up to date.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 7 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 7 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 7 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 7 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 10 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 22 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 22 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 22 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 25 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 25 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 26 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 467 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 467 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 468 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 468 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 505 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 505 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 505 (col. 39): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 39): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 509 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 509 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 510 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 510 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 511 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 511 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 538 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 538 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 538 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 538 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 545 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 546 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 547 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 550 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 550 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 551 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 551 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 552 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 552 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 554 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 554 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 555 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 555 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 556 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 556 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 559 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 559 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 561 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 561 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 7 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 7 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 7 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 7 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 10 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 22 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 22 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 22 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 25 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 25 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 26 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
gmake[1]: 'empty_sysconfig_337zwt.out' is up to date.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
gmake[1]: 'empty_sysconfig_337zwt.out' is up to date.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
gmake[1]: 'empty_sysconfig_337zwt.out' is up to date.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../transform.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="transform.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../transform.c"
"../transform.c", line 14 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 14 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 14 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 14 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 14 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 14 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 15 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 15 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 15 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 17 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 17 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 18 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 18 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 27 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 27 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 27 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 27 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 30 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 30 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 31 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 31 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 39 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 39 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 39 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 39 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 39 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 39 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 39 (col. 36): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 39 (col. 31): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 39 (col. 31): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 42 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 42 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 52 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 52 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 53 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 53 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../transform.c"
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 467 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 467 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 468 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 468 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 505 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 505 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 505 (col. 39): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 39): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 509 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 509 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 510 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 510 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 511 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 511 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 538 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 538 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 538 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 538 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 545 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 546 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 547 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 550 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 550 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 551 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 551 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 552 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 552 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 554 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 554 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 555 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 555 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 556 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 556 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 559 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 559 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 561 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 561 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'main.obj' failed
"../main.c", line 514: error #20: identifier "w" is undefined
"../main.c", line 514: error #141: too many arguments in function call
"../main.c", line 523: error #167: too few arguments in function call
3 errors detected in the compilation of "../main.c".
gmake: *** [main.obj] Error 1
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 7 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 7 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 7 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 7 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 10 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 22 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 22 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 22 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 25 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 25 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 26 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building file: "../transform.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="transform.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../transform.c"
"../transform.c", line 17 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 17 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 17 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 17 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 17 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 17 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 18 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 18 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 18 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 20 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 20 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 21 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 21 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 28 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 30 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 30 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 30 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 30 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 32 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 32 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 33 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 33 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 34 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 34 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 42 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 42 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 42 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 42 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 42 (col. 36): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 42 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 44 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 44 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 45 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 45 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 52 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 52 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 52 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 52 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 52 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 52 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 53 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 53 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 53 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 53 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 53 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 53 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 55 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 55 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 56 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 56 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../transform.c"
 
gmake: Target 'all' not remade because of errors.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 472 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 475 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 475 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 475 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 475 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 475 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 507 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 507 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 507 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 507 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 508 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 508 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 508 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 508 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 529 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 530 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 531 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 534 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 534 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 536 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 536 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 538 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 538 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 540 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 540 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 543 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 543 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 544 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 544 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 545 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 545 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
error #10056: symbol "coswt" redefined: first defined in "./main.obj"; redefined in "./transform.obj"
error #10056: symbol "acoswt" redefined: first defined in "./main.obj"; redefined in "./transform.obj"
error #10056: symbol "ccoswt" redefined: first defined in "./main.obj"; redefined in "./transform.obj"
error #10056: symbol "bcoswt" redefined: first defined in "./main.obj"; redefined in "./transform.obj"
error #10056: symbol "sinwt" redefined: first defined in "./main.obj"; redefined in "./transform.obj"
error #10010: errors encountered during linking; "empty_sysconfig_337zwt.out" not built
 
>> Compilation failure
makefile:151: recipe for target 'empty_sysconfig_337zwt.out' failed
gmake[1]: *** [empty_sysconfig_337zwt.out] Error 1
makefile:147: recipe for target 'all' failed
gmake: *** [all] Error 2

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
error #10056: symbol "coswt" redefined: first defined in "./main.obj"; redefined in "./transform.obj"
error #10056: symbol "acoswt" redefined: first defined in "./main.obj"; redefined in "./transform.obj"
error #10056: symbol "ccoswt" redefined: first defined in "./main.obj"; redefined in "./transform.obj"
error #10056: symbol "bcoswt" redefined: first defined in "./main.obj"; redefined in "./transform.obj"
error #10056: symbol "sinwt" redefined: first defined in "./main.obj"; redefined in "./transform.obj"
error #10010: errors encountered during linking; "empty_sysconfig_337zwt.out" not built
 
>> Compilation failure
makefile:151: recipe for target 'empty_sysconfig_337zwt.out' failed
makefile:147: recipe for target 'all' failed
gmake[1]: *** [empty_sysconfig_337zwt.out] Error 1
gmake: *** [all] Error 2

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
error #10056: symbol "coswt" redefined: first defined in "./main.obj"; redefined in "./transform.obj"
error #10056: symbol "acoswt" redefined: first defined in "./main.obj"; redefined in "./transform.obj"
error #10056: symbol "ccoswt" redefined: first defined in "./main.obj"; redefined in "./transform.obj"
error #10056: symbol "bcoswt" redefined: first defined in "./main.obj"; redefined in "./transform.obj"
error #10056: symbol "sinwt" redefined: first defined in "./main.obj"; redefined in "./transform.obj"
error #10010: errors encountered during linking; "empty_sysconfig_337zwt.out" not built
 
>> Compilation failure
makefile:151: recipe for target 'empty_sysconfig_337zwt.out' failed
makefile:147: recipe for target 'all' failed
gmake[1]: *** [empty_sysconfig_337zwt.out] Error 1
gmake: *** [all] Error 2

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../transform.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="transform.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../transform.c"
"../transform.c", line 17 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 17 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 17 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 17 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 17 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 17 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 18 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 18 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 18 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 20 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 20 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 21 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 21 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 28 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 30 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 30 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 30 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 30 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 32 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 32 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 33 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 33 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 34 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 34 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 42 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 42 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 42 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 42 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 42 (col. 36): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 42 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 44 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 44 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 45 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 45 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 52 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 52 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 52 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 52 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 52 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 52 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 53 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 53 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 53 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 53 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 53 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 53 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 55 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 55 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 56 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 56 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../transform.c"
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 472 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 475 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 475 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 475 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 475 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 475 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 507 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 507 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 507 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 507 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 508 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 508 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 508 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 508 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 529 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 530 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 531 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 534 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 534 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 536 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 536 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 538 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 538 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 540 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 540 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 543 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 543 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 544 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 544 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 545 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 545 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
error #10056: symbol "coswt" redefined: first defined in "./main.obj"; redefined in "./transform.obj"
error #10056: symbol "sinwt" redefined: first defined in "./main.obj"; redefined in "./transform.obj"
error #10010: errors encountered during linking; "empty_sysconfig_337zwt.out" not built
 
>> Compilation failure
makefile:151: recipe for target 'empty_sysconfig_337zwt.out' failed
gmake[1]: *** [empty_sysconfig_337zwt.out] Error 1
makefile:147: recipe for target 'all' failed
gmake: *** [all] Error 2

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 471 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 505 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 505 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 505 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 505 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 507 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 507 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 507 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 507 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 529 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 530 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 533 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 533 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 534 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 534 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 537 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 537 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 538 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 538 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 542 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 542 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 543 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 543 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 544 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 544 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 471 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 505 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 505 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 505 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 505 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 507 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 507 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 507 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 507 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 529 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 530 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 533 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 533 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 534 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 534 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 537 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 537 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 538 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 538 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 542 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 542 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 543 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 543 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 544 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 544 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 7 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 7 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 7 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 7 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 10 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 22 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 22 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 22 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 25 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 25 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 26 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 7 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 7 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 7 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 7 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 10 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 22 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 22 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 22 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 25 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 25 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 26 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
gmake[1]: 'empty_sysconfig_337zwt.out' is up to date.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 471 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 472 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 473 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 474 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 505 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 505 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 505 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 505 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 506 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 507 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 507 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 507 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 507 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 529 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 530 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 533 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 533 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 534 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 534 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 537 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 537 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 538 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 538 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 542 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 542 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 543 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 543 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 544 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 544 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../nokia_5110.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="nokia_5110.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../nokia_5110.c"
"../nokia_5110.c", line 383 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../nokia_5110.c", line 383 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../nokia_5110.c"
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 468 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 468 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 468 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 468 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 468 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 468 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 502 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 502 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 502 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 502 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 503 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 503 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 503 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 503 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 504 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 504 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 504 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 504 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 530 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 530 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 531 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 531 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 532 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 532 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 534 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 534 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 536 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 536 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 540 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 540 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 541 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 541 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
gmake[1]: 'empty_sysconfig_337zwt.out' is up to date.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 468 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 468 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 468 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 468 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 468 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 468 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 468 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 468 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 468 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 468 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 468 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 468 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 469 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 470 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 471 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 502 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 502 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 502 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 502 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 503 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 503 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 503 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 503 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 504 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 504 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 504 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 504 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 530 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 530 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 531 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 531 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 532 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 532 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 534 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 534 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 536 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 536 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 540 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 540 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 541 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 541 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
gmake[1]: 'empty_sysconfig_337zwt.out' is up to date.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 478 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 478 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 478 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 478 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 478 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 478 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 479 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 479 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 479 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 479 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 479 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 479 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 480 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 480 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 480 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 480 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 480 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 480 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 481 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 481 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 481 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 481 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 481 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 511 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 511 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 511 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 511 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 512 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 512 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 512 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 512 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 513 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 513 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 513 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 513 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 534 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 536 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 540 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 540 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 541 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 541 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 543 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 543 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 544 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 544 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 545 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 545 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 548 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 548 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 549 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 549 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 550 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 550 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 478 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 478 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 478 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 478 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 478 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 478 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 479 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 479 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 479 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 479 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 479 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 479 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 480 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 480 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 480 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 480 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 480 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 480 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 481 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 481 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 481 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 481 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 481 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 511 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 511 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 511 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 511 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 512 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 512 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 512 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 512 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 513 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 513 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 513 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 513 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 534 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 536 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 540 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 540 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 541 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 541 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 543 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 543 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 544 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 544 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 545 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 545 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 548 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 548 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 549 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 549 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 550 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 550 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 478 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 478 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 478 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 478 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 478 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 478 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 479 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 479 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 479 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 479 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 479 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 479 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 480 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 480 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 480 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 480 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 480 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 480 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 481 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 481 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 481 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 481 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 481 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 511 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 511 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 511 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 511 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 512 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 512 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 512 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 512 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 513 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 513 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 513 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 513 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 534 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 536 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 540 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 540 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 541 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 541 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 543 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 543 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 544 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 544 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 545 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 545 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 548 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 548 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 549 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 549 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 550 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 550 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 478 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 478 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 478 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 478 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 478 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 478 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 479 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 479 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 479 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 479 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 479 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 479 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 480 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 480 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 480 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 480 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 480 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 480 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 481 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 481 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 481 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 481 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 481 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 511 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 511 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 511 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 511 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 512 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 512 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 512 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 512 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 513 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 513 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 513 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 513 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 534 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 536 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 540 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 540 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 541 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 541 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 543 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 543 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 544 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 544 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 545 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 545 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 548 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 548 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 549 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 549 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 550 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 550 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 478 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 478 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 478 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 478 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 478 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 478 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 479 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 479 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 479 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 479 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 479 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 479 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 480 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 480 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 480 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 480 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 480 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 480 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 481 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 481 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 481 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 481 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 481 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 511 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 511 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 511 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 511 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 512 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 512 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 512 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 512 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 513 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 513 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 513 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 513 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 534 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 536 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 538 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 538 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 540 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 540 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 542 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 542 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 543 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 543 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 544 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 544 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 547 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 547 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 548 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 548 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 549 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 549 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS/workSpace/DSP/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Clean-only build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 clean -O 
 
DEL /F  "syscfg\board.h" "syscfg\pinmux.csv"  "empty_sysconfig_337zwt.hex"  "syscfg\board.c"  "empty_sysconfig_337zwt.out" 
DEL /F "syscfg\board.obj" "main.obj" "nokia_5110.obj" "pid.obj" "protect.obj" "transform.obj" "device\F2837xD_CodeStartBranch.obj" "device\device.obj" 
DEL /F "syscfg\board.d" "main.d" "nokia_5110.d" "pid.d" "protect.d" "transform.d" "device\device.d" 
DEL /F "device\F2837xD_CodeStartBranch.d" 
RMDIR /S/Q  "syscfg\" 
找不到 D:\CCS_workspace\Inversion_3Phase_1.2\empty_sysconfig_337zwt\CPU1_RAM\empty_sysconfig_337zwt.hex
找不到 D:\CCS_workspace\Inversion_3Phase_1.2\empty_sysconfig_337zwt\CPU1_RAM\device\F2837xD_CodeStartBranch.d
Finished clean
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../c2000.syscfg"
Invoking: SysConfig
"D:/CCS/ccs/utils/sysconfig_1.9.0/sysconfig_cli.bat" -s "D:/CCS/C2000Ware_3_04_00_00_Software/.metadata/sdk.json" -d "F2837xD" --script "D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/c2000.syscfg" -o "syscfg" --package F2837xD_337ZWT --part F2837xD_337ZWT --compiler ccs
Running script...
Validating...
Generating Code (c2000.syscfg)...
Writing D:\CCS_workspace\Inversion_3Phase_1.2\empty_sysconfig_337zwt\CPU1_RAM\syscfg\board.c...
Writing D:\CCS_workspace\Inversion_3Phase_1.2\empty_sysconfig_337zwt\CPU1_RAM\syscfg\board.h...
Writing D:\CCS_workspace\Inversion_3Phase_1.2\empty_sysconfig_337zwt\CPU1_RAM\syscfg\pinmux.csv...
Finished building: "../c2000.syscfg"
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'main.obj' failed
"../main.c", line 36: error #66: expected a ";"
"../main.c", line 173: warning #262-D: explicit type is missing ("int" assumed)
"../main.c", line 524: warning #679-D: using out-of-scope declaration of variable "k" (declared at line 173)
1 error detected in the compilation of "../main.c".
gmake: *** [main.obj] Error 1
Building file: "syscfg/board.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="syscfg/board.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg" --obj_directory="syscfg"  "syscfg/board.c"
Finished building: "syscfg/board.c"
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 7 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 7 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 7 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 7 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 10 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 22 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 22 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 22 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 25 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 25 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 26 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building file: "../protect.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="protect.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../protect.c"
Finished building: "../protect.c"
 
Building file: "../device/F2837xD_CodeStartBranch.asm"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="device/F2837xD_CodeStartBranch.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg" --obj_directory="device"  "../device/F2837xD_CodeStartBranch.asm"
"../protect.c", line 6 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../protect.c", line 6 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../protect.c", line 6 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../protect.c", line 8 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../protect.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../device/F2837xD_CodeStartBranch.asm"
 
Building file: "../nokia_5110.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="nokia_5110.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../nokia_5110.c"
"../nokia_5110.c", line 383 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../nokia_5110.c", line 383 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../nokia_5110.c"
 
Building file: "../transform.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="transform.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../transform.c"
"../transform.c", line 20 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 20 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 20 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 20 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 20 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 20 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 21 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 21 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 21 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 23 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 23 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 24 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 24 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 31 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 32 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 32 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 32 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 32 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 33 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 33 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 33 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 33 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 35 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 35 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 36 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 36 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 37 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 37 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 44 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 44 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 44 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 44 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 44 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 44 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 45 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 45 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 45 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 45 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 45 (col. 36): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 45 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 47 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 47 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 48 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 48 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 55 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 55 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 55 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 55 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 55 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 55 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 56 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 56 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 56 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 56 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 56 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 56 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 58 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 58 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 59 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 59 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../transform.c"
 
Building file: "../device/device.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="device/device.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg" --obj_directory="device"  "../device/device.c"
Finished building: "../device/device.c"
 
gmake: Target 'all' not remade because of errors.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'main.obj' failed
"../main.c", line 36: error #66: expected a ";"
"../main.c", line 174: warning #262-D: explicit type is missing ("int" assumed)
"../main.c", line 525: warning #679-D: using out-of-scope declaration of variable "k" (declared at line 174)
1 error detected in the compilation of "../main.c".
gmake: *** [main.obj] Error 1
gmake: Target 'all' not remade because of errors.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 174: warning #262-D: explicit type is missing ("int" assumed)
"../main.c", line 525: warning #679-D: using out-of-scope declaration of variable "k" (declared at line 174)
"../main.c", line 484 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 484 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 484 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 484 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 484 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 484 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 485 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 485 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 485 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 485 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 485 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 485 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 486 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 486 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 486 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 486 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 486 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 486 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 487 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 487 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 487 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 487 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 487 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 531 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 531 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 531 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 531 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 532 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 532 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 532 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 532 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 540 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 541 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 542 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 544 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 544 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 545 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 545 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 546 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 546 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 548 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 548 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 549 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 549 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 550 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 550 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 553 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 553 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 554 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 554 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 555 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 555 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../transform.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="transform.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../transform.c"
"../transform.c", line 21 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 21 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 21 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 21 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 21 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 21 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 22 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 22 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 22 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 24 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 24 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 32 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 33 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 33 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 33 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 33 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 34 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 34 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 34 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 34 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 36 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 36 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 37 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 37 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 45 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 45 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 45 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 45 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 45 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 45 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 45 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 45 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 45 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 45 (col. 13): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for cosf.
"../transform.c", line 45 (col. 59): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 45 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 45 (col. 49): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 45 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 45 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 45 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 45 (col. 48): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 45 (col. 42): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for sinf.
"../transform.c", line 46 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 46 (col. 40): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 46 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 46 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 46 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 46 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 46 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 46 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 46 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 46 (col. 62): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 46 (col. 45): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 46 (col. 52): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 46 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 46 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 46 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 46 (col. 51): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 48 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 48 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 56 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 56 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 56 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 56 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 56 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 56 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 56 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 56 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 56 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 56 (col. 59): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 56 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 56 (col. 49): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 56 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 56 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 56 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 56 (col. 48): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 57 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 57 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 57 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 57 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 57 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 57 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 57 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 57 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 57 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 57 (col. 59): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 57 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 57 (col. 49): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 57 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 57 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 57 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 57 (col. 48): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 59 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 59 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../transform.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 525: warning #679-D: using out-of-scope declaration of variable "k" (declared at line 174)
"../main.c", line 484 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 484 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 484 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 484 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 484 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 484 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 485 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 485 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 485 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 485 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 485 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 485 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 486 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 486 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 486 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 486 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 486 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 486 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 487 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 487 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 487 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 487 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 487 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 531 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 531 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 531 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 531 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 532 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 532 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 532 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 532 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 540 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 541 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 542 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 544 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 544 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 545 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 545 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 546 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 546 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 548 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 548 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 549 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 549 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 550 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 550 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 553 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 553 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 554 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 554 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 555 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 555 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 484 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 484 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 484 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 484 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 484 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 484 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 485 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 485 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 485 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 485 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 485 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 485 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 486 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 486 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 486 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 486 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 486 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 486 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 487 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 487 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 487 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 487 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 487 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 531 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 531 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 531 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 531 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 532 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 532 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 532 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 532 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 540 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 541 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 542 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 544 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 544 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 545 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 545 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 546 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 546 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 548 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 548 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 549 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 549 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 550 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 550 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 553 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 553 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 554 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 554 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 555 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 555 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../transform.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="transform.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../transform.c"
"../transform.c", line 20 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 20 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 20 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 20 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 20 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 20 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 21 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 21 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 21 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 23 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 23 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 24 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 24 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 31 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 32 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 32 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 32 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 32 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 33 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 33 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 33 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 33 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 35 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 35 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 36 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 36 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 37 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 37 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 44 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 44 (col. 36): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 44 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 44 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 44 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 44 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 44 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 44 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 44 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 44 (col. 13): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for cosf.
"../transform.c", line 44 (col. 57): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 44 (col. 41): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 44 (col. 48): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 44 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 44 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 44 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 44 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 44 (col. 41): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for sinf.
"../transform.c", line 45 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 45 (col. 39): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 45 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 45 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 45 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 45 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 45 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 45 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 45 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 45 (col. 60): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 45 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 45 (col. 51): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 45 (col. 49): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 45 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 45 (col. 45): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 45 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 47 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 47 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 48 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 48 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 55 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 55 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 55 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 55 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 55 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 55 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 55 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 55 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 55 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 55 (col. 59): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 55 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 55 (col. 49): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 55 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 55 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 55 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 55 (col. 48): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 56 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 56 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 56 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 56 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 56 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 56 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 56 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 56 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 56 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 56 (col. 59): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 56 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 56 (col. 49): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 56 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 56 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 56 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 56 (col. 48): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 58 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 58 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 59 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 59 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../transform.c"
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 485 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 485 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 485 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 485 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 485 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 485 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 486 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 486 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 486 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 486 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 486 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 486 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 487 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 487 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 487 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 487 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 487 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 487 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 488 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 488 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 488 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 488 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 488 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 533 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 533 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 533 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 533 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 534 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 534 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 534 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 534 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 542 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 543 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 544 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 546 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 546 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 547 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 547 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 548 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 548 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 550 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 550 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 551 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 551 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 552 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 552 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 555 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 555 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 556 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 556 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 557 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 557 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 94 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 94 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 103 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 103 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 507 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 507 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 507 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 507 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 507 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 507 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 508 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 508 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 508 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 508 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 508 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 508 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 509 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 509 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 509 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 509 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 509 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 509 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 510 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 510 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 510 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 510 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 510 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 541 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 541 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 541 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 541 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 542 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 542 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 542 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 542 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 543 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 543 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 543 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 543 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 555 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 555 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 555 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 555 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 556 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 556 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 556 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 556 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 564 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 565 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 566 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 568 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 568 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 569 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 569 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 570 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 570 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 572 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 572 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 573 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 573 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 574 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 574 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 577 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 577 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 578 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 578 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 579 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 579 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'main.obj' failed
"../main.c", line 540: error #20: identifier "aVin" is undefined
1 error detected in the compilation of "../main.c".
gmake: *** [main.obj] Error 1
gmake: Target 'all' not remade because of errors.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 89 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 89 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 98 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 98 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 537 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 537 (col. 51): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 537 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 537 (col. 48): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 537 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 537 (col. 31): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 538 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 538 (col. 51): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 538 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 538 (col. 48): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 538 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 538 (col. 31): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 51): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 48): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 31): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 540 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 540 (col. 48): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 540 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 540 (col. 45): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 540 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 540 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 541 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 541 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 541 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 541 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 541 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 541 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 542 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 542 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 542 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 542 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 542 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 542 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 543 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 543 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 543 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 543 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 543 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 543 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 545 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 545 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 545 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 545 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 546 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 546 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 546 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 546 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 547 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 547 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 547 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 547 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 559 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 559 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 559 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 559 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 568 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 569 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 570 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 572 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 572 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 573 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 573 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 574 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 574 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 576 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 576 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 577 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 577 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 578 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 578 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 581 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 581 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 582 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 582 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 583 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 583 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 89 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 89 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 98 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 98 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 537 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 537 (col. 51): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 537 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 537 (col. 48): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 537 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 537 (col. 31): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 538 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 538 (col. 51): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 538 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 538 (col. 48): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 538 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 538 (col. 31): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 51): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 48): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 31): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 540 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 540 (col. 48): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 540 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 540 (col. 45): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 540 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 540 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 541 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 541 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 541 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 541 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 541 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 541 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 542 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 542 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 542 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 542 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 542 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 542 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 543 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 543 (col. 49): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 543 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 543 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 543 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 543 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 545 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 545 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 545 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 545 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 546 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 546 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 546 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 546 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 547 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 547 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 547 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 547 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 559 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 559 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 559 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 559 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 568 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 569 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 570 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 572 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 572 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 573 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 573 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 574 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 574 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 576 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 576 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 577 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 577 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 578 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 578 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 581 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 581 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 582 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 582 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 583 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 583 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 89 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 89 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 98 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 98 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 537 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 537 (col. 51): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 537 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 537 (col. 48): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 537 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 537 (col. 31): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 538 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 538 (col. 51): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 538 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 538 (col. 48): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 538 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 538 (col. 31): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 51): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 48): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 31): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 540 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 540 (col. 48): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 540 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 540 (col. 45): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 540 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 540 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 541 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 541 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 541 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 541 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 541 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 541 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 542 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 542 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 542 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 542 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 542 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 542 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 543 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 543 (col. 48): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 543 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 543 (col. 45): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 543 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 543 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 545 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 545 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 545 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 545 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 546 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 546 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 546 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 546 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 547 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 547 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 547 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 547 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 559 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 559 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 559 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 559 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 568 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 569 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 570 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 572 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 572 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 573 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 573 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 574 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 574 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 576 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 576 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 577 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 577 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 578 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 578 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 581 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 581 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 582 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 582 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 583 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 583 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../device/F2837xD_CodeStartBranch.asm"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu64 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="device/F2837xD_CodeStartBranch.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg" --obj_directory="device"  "../device/F2837xD_CodeStartBranch.asm"
Finished building: "../device/F2837xD_CodeStartBranch.asm"
 
Building file: "../protect.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu64 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="protect.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../protect.c"
Finished building: "../protect.c"
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu64 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
Finished building: "../pid.c"
 
Building file: "syscfg/board.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu64 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="syscfg/board.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg" --obj_directory="syscfg"  "syscfg/board.c"
Finished building: "syscfg/board.c"
 
Building file: "../transform.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu64 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="transform.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../transform.c"
"../transform.c", line 44 (col. 13): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for cosf.
"../transform.c", line 44 (col. 41): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for sinf.
Finished building: "../transform.c"
 
Building file: "../device/device.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu64 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="device/device.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg" --obj_directory="device"  "../device/device.c"
Finished building: "../device/device.c"
 
Building file: "../nokia_5110.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu64 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="nokia_5110.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../nokia_5110.c"
Finished building: "../nokia_5110.c"
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu64 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu64 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu64 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'main.obj' failed
"../main.c", line 550: error #20: identifier "V_3Phase" is undefined
"../main.c", line 555: error #20: identifier "V_2Phase" is undefined
"../main.c", line 558: error #20: identifier "V_dq" is undefined
3 errors detected in the compilation of "../main.c".
gmake: *** [main.obj] Error 1
Building file: "../transform.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu64 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="transform.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../transform.c"
"../transform.c", line 49 (col. 13): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for cosf.
"../transform.c", line 49 (col. 41): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for sinf.
Finished building: "../transform.c"
 
gmake: Target 'all' not remade because of errors.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../transform.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu64 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="transform.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../transform.c"
"../transform.c", line 49 (col. 13): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for cosf.
"../transform.c", line 49 (col. 41): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for sinf.
Finished building: "../transform.c"
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu64 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu64 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu64 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
Finished building: "../pid.c"
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu64 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'main.obj' failed
"../main.c", line 566: error #20: identifier "pPIDId" is undefined
"../main.c", line 567: error #20: identifier "pPIDIq" is undefined
"../main.c", line 563: warning #179-D: variable "pPIDVd" was declared but never referenced
"../main.c", line 564: warning #179-D: variable "pPIDVq" was declared but never referenced
2 errors detected in the compilation of "../main.c".
gmake: *** [main.obj] Error 1
gmake: Target 'all' not remade because of errors.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu64 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu64 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu64 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu64 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu64 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu64 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
gmake[1]: 'empty_sysconfig_337zwt.out' is up to date.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu64 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu64 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
gmake[1]: 'empty_sysconfig_337zwt.out' is up to date.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../device/F2837xD_CodeStartBranch.asm"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="device/F2837xD_CodeStartBranch.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg" --obj_directory="device"  "../device/F2837xD_CodeStartBranch.asm"
Finished building: "../device/F2837xD_CodeStartBranch.asm"
 
Building file: "../protect.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="protect.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../protect.c"
"../protect.c", line 6 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../protect.c", line 6 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../protect.c", line 6 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../protect.c", line 8 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../protect.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../protect.c"
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 20 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building file: "syscfg/board.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="syscfg/board.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg" --obj_directory="syscfg"  "syscfg/board.c"
Finished building: "syscfg/board.c"
 
Building file: "../nokia_5110.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="nokia_5110.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../nokia_5110.c"
"../nokia_5110.c", line 383 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../nokia_5110.c", line 383 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../nokia_5110.c"
 
Building file: "../transform.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="transform.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../transform.c"
"../transform.c", line 25 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 28 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 28 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 36 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 37 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 37 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 37 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 37 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 40 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 40 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 42 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 42 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 36): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 13): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for cosf.
"../transform.c", line 49 (col. 57): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 41): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 48): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 41): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for sinf.
"../transform.c", line 50 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 39): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 60): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 51): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 49): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 45): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 52 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 52 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 53 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 53 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 59): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 49): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 48): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 59): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 49): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 48): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 63 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 63 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 64 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 64 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../transform.c"
 
Building file: "../device/device.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="device/device.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg" --obj_directory="device"  "../device/device.c"
Finished building: "../device/device.c"
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 92 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 92 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 101 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 101 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 513 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 513 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 513 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 513 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 513 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 513 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 514 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 514 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 514 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 514 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 514 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 514 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 515 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 515 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 515 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 515 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 515 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 515 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 45): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 554 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 554 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 555 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 555 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 556 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 556 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 569 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 569 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 569 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 569 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 570 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 570 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 570 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 570 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 578 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 579 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 580 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 582 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 582 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 583 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 583 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 584 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 584 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 586 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 586 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 587 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 587 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 588 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 588 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 591 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 591 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 592 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 592 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 593 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 593 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 20 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
gmake[1]: 'empty_sysconfig_337zwt.out' is up to date.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
gmake[1]: 'empty_sysconfig_337zwt.out' is up to date.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 20 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../transform.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="transform.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../transform.c"
"../transform.c", line 25 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 28 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 28 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 36 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 37 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 37 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 37 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 37 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 40 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 40 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 42 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 42 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 13): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for cosf.
"../transform.c", line 49 (col. 49): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 39): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 37): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for sinf.
"../transform.c", line 50 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 52): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 40): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 45): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 41): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 52 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 52 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 53 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 53 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 49): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 39): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 49): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 37): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 39): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 63 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 63 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 64 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 64 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../transform.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 20 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 20 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building file: "../transform.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="transform.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../transform.c"
"../transform.c", line 25 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 28 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 28 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 36 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 37 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 37 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 37 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 37 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 40 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 40 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 42 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 42 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 36): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 13): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for cosf.
"../transform.c", line 49 (col. 57): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 41): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 48): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 41): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for sinf.
"../transform.c", line 50 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 39): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 60): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 51): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 49): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 45): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 52 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 52 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 53 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 53 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 36): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 57): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 41): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 48): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 36): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 57): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 41): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 48): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 63 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 63 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 64 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 64 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../transform.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../transform.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="transform.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../transform.c"
"../transform.c", line 25 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 28 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 28 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 36 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 37 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 37 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 37 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 37 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 40 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 40 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 42 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 42 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 36): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 13): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for cosf.
"../transform.c", line 49 (col. 57): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 41): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 48): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 41): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for sinf.
"../transform.c", line 50 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 39): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 60): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 51): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 49): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 45): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 52 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 52 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 53 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 53 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 36): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 57): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 41): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 48): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 36): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 57): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 41): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 48): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 63 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 63 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 64 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 64 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../transform.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../transform.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="transform.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../transform.c"
"../transform.c", line 25 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 28 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 28 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 36 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 37 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 37 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 37 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 37 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 40 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 40 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 42 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 42 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 36): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 13): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for cosf.
"../transform.c", line 49 (col. 57): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 41): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 48): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 41): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for sinf.
"../transform.c", line 50 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 39): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 60): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 51): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 49): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 45): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 52 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 52 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 53 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 53 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 36): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 57): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 41): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 48): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 36): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 57): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 41): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 48): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 63 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 63 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 64 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 64 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../transform.c"
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 92 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 92 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 101 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 101 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 513 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 513 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 513 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 513 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 513 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 513 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 514 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 514 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 514 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 514 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 514 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 514 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 515 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 515 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 515 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 515 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 515 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 515 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 45): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 554 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 554 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 555 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 555 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 556 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 556 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 569 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 569 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 569 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 569 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 570 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 570 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 570 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 570 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 578 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 579 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 580 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 582 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 582 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 583 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 583 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 584 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 584 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 586 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 586 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 587 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 587 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 588 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 588 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 591 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 591 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 592 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 592 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 593 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 593 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../transform.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="transform.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../transform.c"
"../transform.c", line 25 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 28 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 28 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 36 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 37 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 37 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 37 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 37 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 40 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 40 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 42 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 42 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 36): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 13): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for cosf.
"../transform.c", line 49 (col. 57): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 41): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 48): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 41): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for sinf.
"../transform.c", line 50 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 39): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 60): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 51): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 49): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 45): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 52 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 52 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 53 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 53 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 36): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 57): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 41): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 48): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 36): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 57): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 41): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 48): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 63 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 63 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 64 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 64 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../transform.c"
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 92 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 92 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 101 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 101 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 513 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 513 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 513 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 513 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 513 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 513 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 514 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 514 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 514 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 514 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 514 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 514 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 515 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 515 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 515 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 515 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 515 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 515 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 45): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 554 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 554 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 555 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 555 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 556 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 556 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 569 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 569 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 569 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 569 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 570 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 570 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 570 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 570 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 578 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 579 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 580 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 582 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 582 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 583 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 583 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 584 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 584 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 586 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 586 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 587 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 587 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 588 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 588 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 591 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 591 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 592 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 592 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 593 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 593 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../transform.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="transform.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../transform.c"
"../transform.c", line 25 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 28 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 28 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 36 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 37 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 37 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 37 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 37 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 40 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 40 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 42 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 42 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 36): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 13): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for cosf.
"../transform.c", line 49 (col. 57): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 41): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 48): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 41): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for sinf.
"../transform.c", line 50 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 39): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 60): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 51): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 49): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 45): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 52 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 52 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 53 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 53 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 36): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 57): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 41): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 48): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 36): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 57): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 41): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 48): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 63 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 63 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 64 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 64 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../transform.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../transform.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="transform.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../transform.c"
"../transform.c", line 25 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 28 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 28 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 36 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 37 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 37 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 37 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 37 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 40 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 40 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 42 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 42 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 36): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 13): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for cosf.
"../transform.c", line 49 (col. 57): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 41): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 48): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 41): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for sinf.
"../transform.c", line 50 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 39): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 60): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 51): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 49): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 45): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 52 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 52 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 53 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 53 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 36): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 57): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 41): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 48): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 36): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 57): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 41): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 48): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 63 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 63 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 64 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 64 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../transform.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 20 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 20 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 20 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 20 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 20 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../transform.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="transform.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../transform.c"
"../transform.c", line 26 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 27 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 27 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 27 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 30 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 30 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 37 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 39 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 39 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 39 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 39 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 42 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 42 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 43 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 43 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 14): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for FP division.
"../transform.c", line 50 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 13): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for cosf.
"../transform.c", line 50 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 31): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 31): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 31): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 30): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for sinf.
"../transform.c", line 51 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 51 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 51 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 51 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 51 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 51 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 51 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 51 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 51 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 51 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 51 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 51 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 51 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 51 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 51 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 51 (col. 36): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 53 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 53 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 54 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 54 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 31): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 31): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 31): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 62 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 62 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 62 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 62 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 62 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 62 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 62 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 62 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 62 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 62 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 62 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 62 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 62 (col. 31): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 62 (col. 31): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 62 (col. 31): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 62 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 64 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 64 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 65 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 65 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../transform.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
gmake[1]: 'empty_sysconfig_337zwt.out' is up to date.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 20 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../transform.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="transform.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../transform.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'transform.obj' failed
"../transform.c", line 8: error #28: expression must have a constant value
1 error detected in the compilation of "../transform.c".
gmake: *** [transform.obj] Error 1
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'main.obj' failed
"../main.c", line 555: error #20: identifier "pi" is undefined
"../main.c", line 555: error #20: identifier "Ts" is undefined
2 errors detected in the compilation of "../main.c".
gmake: *** [main.obj] Error 1
gmake: Target 'all' not remade because of errors.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../transform.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="transform.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../transform.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'transform.obj' failed
"../transform.c", line 8: error #28: expression must have a constant value
1 error detected in the compilation of "../transform.c".
gmake: *** [transform.obj] Error 1
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'main.obj' failed
"../main.c", line 555: error #20: identifier "pi" is undefined
"../main.c", line 555: error #20: identifier "Ts" is undefined
2 errors detected in the compilation of "../main.c".
gmake: *** [main.obj] Error 1
gmake: Target 'all' not remade because of errors.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../transform.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="transform.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../transform.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'transform.obj' failed
"../transform.c", line 8: error #28: expression must have a constant value
1 error detected in the compilation of "../transform.c".
gmake: *** [transform.obj] Error 1
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 93 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 93 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 102 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 102 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 514 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 514 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 514 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 514 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 514 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 514 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 515 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 515 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 515 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 515 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 515 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 515 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 45): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 555 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 555 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 556 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 556 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 557 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 557 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 570 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 570 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 570 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 570 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 571 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 571 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 571 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 571 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 579 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 580 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 581 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 583 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 583 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 584 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 584 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 585 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 585 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 587 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 587 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 588 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 588 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 589 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 589 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 592 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 592 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 593 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 593 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 594 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 594 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
gmake: Target 'all' not remade because of errors.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../transform.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="transform.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../transform.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'transform.obj' failed
"../transform.c", line 8: error #28: expression must have a constant value
1 error detected in the compilation of "../transform.c".
gmake: *** [transform.obj] Error 1
gmake: Target 'all' not remade because of errors.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'main.obj' failed
"../main.c", line 556: error #20: identifier "Ts" is undefined
1 error detected in the compilation of "../main.c".
gmake: *** [main.obj] Error 1
Building file: "../transform.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="transform.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../transform.c"
"../transform.c", line 26 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 27 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 27 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 27 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 30 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 30 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 37 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 39 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 39 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 39 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 39 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 42 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 42 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 43 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 43 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 13): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for cosf.
"../transform.c", line 50 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 30): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for sinf.
"../transform.c", line 51 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 51 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 51 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 51 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 51 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 51 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 53 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 53 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 54 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 54 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 62 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 62 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 62 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 62 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 62 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 62 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 64 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 64 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 65 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 65 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../transform.c"
 
gmake: Target 'all' not remade because of errors.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../transform.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="transform.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../transform.c"
"../transform.c", line 26 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 27 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 27 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 27 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 30 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 30 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 37 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 39 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 39 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 39 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 39 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 42 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 42 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 43 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 43 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 13): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for cosf.
"../transform.c", line 50 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 30): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for sinf.
"../transform.c", line 51 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 51 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 51 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 51 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 51 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 51 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 53 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 53 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 54 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 54 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 62 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 62 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 62 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 62 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 62 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 62 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 64 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 64 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 65 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 65 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../transform.c"
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 95 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 95 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 104 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 104 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 45): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 557 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 557 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 557 (col. 17): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for FP division.
"../main.c", line 557 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 557 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 558 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 558 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 559 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 559 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 573 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 573 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 573 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 573 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 574 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 574 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 574 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 574 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 582 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 583 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 584 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 586 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 586 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 587 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 587 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 588 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 588 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 590 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 590 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 591 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 591 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 592 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 592 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 595 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 595 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 596 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 596 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 597 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 597 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
gmake[1]: 'empty_sysconfig_337zwt.out' is up to date.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 95 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 95 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 104 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 104 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 516 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 45): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 557 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 557 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 557 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 557 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 557 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 557 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 557 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 557 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 558 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 558 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 559 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 559 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 573 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 573 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 573 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 573 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 574 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 574 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 574 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 574 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 582 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 583 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 584 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 586 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 586 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 587 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 587 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 588 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 588 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 590 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 590 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 591 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 591 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 592 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 592 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 595 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 595 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 596 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 596 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 597 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 597 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 20 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 20 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 20 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 20 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 20 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 96 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 96 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 105 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 105 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 45): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 558 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 558 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 558 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 558 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 558 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 559 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 559 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 559 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 559 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 559 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 561 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 561 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 562 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 562 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 575 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 575 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 575 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 575 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 576 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 576 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 576 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 576 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 584 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 585 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 586 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 588 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 588 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 589 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 589 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 590 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 590 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 592 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 592 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 593 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 593 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 594 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 594 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 597 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 597 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 598 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 598 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 599 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 599 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
gmake[1]: 'empty_sysconfig_337zwt.out' is up to date.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 20 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 20 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 20 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 20 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
gmake[1]: 'empty_sysconfig_337zwt.out' is up to date.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../transform.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="transform.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../transform.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'transform.obj' failed
"../transform.c", line 26: error #20: identifier "I" is undefined
"../transform.c", line 37: error #20: identifier "I" is undefined
"../transform.c", line 50: error #20: identifier "I" is undefined
"../transform.c", line 61: error #20: identifier "I" is undefined
4 errors detected in the compilation of "../transform.c".
gmake: *** [transform.obj] Error 1
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 96 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 96 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 105 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 105 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 45): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 558 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 558 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 558 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 558 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 558 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 559 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 559 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 559 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 559 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 559 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 561 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 561 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 562 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 562 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 575 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 575 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 575 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 575 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 576 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 576 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 576 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 576 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 584 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 585 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 586 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 588 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 588 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 589 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 589 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 590 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 590 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 592 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 592 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 593 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 593 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 594 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 594 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 597 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 597 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 598 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 598 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 599 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 599 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
gmake: Target 'all' not remade because of errors.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../transform.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="transform.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../transform.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'transform.obj' failed
"../transform.c", line 37: error #20: identifier "I" is undefined
1 error detected in the compilation of "../transform.c".
gmake: *** [transform.obj] Error 1
gmake: Target 'all' not remade because of errors.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../transform.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="transform.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../transform.c"
"../transform.c", line 26 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 27 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 27 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 27 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 30 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 30 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 37 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 39 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 39 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 39 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 39 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 42 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 42 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 43 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 43 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 13): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for cosf.
"../transform.c", line 50 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 30): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for sinf.
"../transform.c", line 51 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 51 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 51 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 51 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 51 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 51 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 53 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 53 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 54 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 54 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 62 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 62 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 62 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 62 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 62 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 62 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 64 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 64 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 65 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 65 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../transform.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 20 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 96 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 96 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 105 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 105 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 517 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 45): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 559 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 559 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 559 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 559 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 559 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 559 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 559 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 559 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 561 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 561 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 562 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 562 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 575 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 575 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 575 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 575 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 576 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 576 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 576 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 576 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 584 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 585 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 586 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 588 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 588 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 589 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 589 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 590 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 590 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 592 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 592 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 593 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 593 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 594 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 594 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 597 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 597 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 598 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 598 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 599 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 599 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 97 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 97 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 106 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 106 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 45): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 561 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 561 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 562 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 562 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 563 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 563 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 576 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 576 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 576 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 576 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 577 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 577 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 577 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 577 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 585 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 586 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 587 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 589 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 589 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 590 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 590 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 591 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 591 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 593 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 593 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 594 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 594 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 595 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 595 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 598 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 598 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 599 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 599 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 600 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 600 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 97 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 97 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 106 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 106 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 45): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 561 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 561 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 562 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 562 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 563 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 563 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 576 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 576 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 576 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 576 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 577 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 577 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 577 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 577 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 585 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 586 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 587 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 589 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 589 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 590 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 590 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 591 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 591 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 593 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 593 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 594 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 594 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 595 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 595 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 598 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 598 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 599 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 599 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 600 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 600 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 20 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 20 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 20 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 20 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 20 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 20 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 20 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 20 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 20 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 20 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 20 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 20 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 20 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 20 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 20 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 20 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 20 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 20 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 97 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 97 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 106 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 106 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 45): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 561 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 561 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 562 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 562 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 563 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 563 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 576 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 576 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 576 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 576 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 577 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 577 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 577 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 577 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 585 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 586 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 587 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 589 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 589 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 590 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 590 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 591 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 591 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 593 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 593 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 594 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 594 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 595 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 595 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 598 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 598 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 599 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 599 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 600 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 600 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 20 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 20 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 20 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 20 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 20 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 20 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 20 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 97 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 97 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 106 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 106 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 45): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 561 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 561 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 562 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 562 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 563 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 563 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 576 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 576 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 576 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 576 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 577 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 577 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 577 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 577 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 585 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 586 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 587 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 589 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 589 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 590 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 590 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 591 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 591 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 593 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 593 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 594 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 594 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 595 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 595 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 598 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 598 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 599 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 599 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 600 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 600 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 20 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 20 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 20 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 20 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
gmake[1]: 'empty_sysconfig_337zwt.out' is up to date.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 20 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
gmake[1]: 'empty_sysconfig_337zwt.out' is up to date.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 97 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 97 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 106 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 106 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 45): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 561 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 561 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 562 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 562 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 563 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 563 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 576 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 576 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 576 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 576 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 577 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 577 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 577 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 577 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 585 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 586 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 587 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 589 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 589 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 590 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 590 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 591 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 591 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 593 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 593 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 594 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 594 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 595 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 595 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 598 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 598 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 599 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 599 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 600 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 600 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 20 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 97 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 97 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 106 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 106 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 45): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 561 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 561 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 562 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 562 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 563 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 563 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 576 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 576 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 576 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 576 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 577 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 577 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 577 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 577 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 585 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 586 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 587 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 589 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 589 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 590 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 590 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 591 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 591 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 593 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 593 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 594 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 594 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 595 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 595 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 598 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 598 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 599 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 599 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 600 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 600 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 97 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 97 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 106 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 106 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 45): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 561 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 561 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 562 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 562 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 563 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 563 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 576 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 576 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 576 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 576 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 577 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 577 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 577 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 577 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 585 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 586 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 587 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 589 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 589 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 590 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 590 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 591 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 591 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 593 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 593 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 594 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 594 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 595 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 595 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 598 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 598 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 599 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 599 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 600 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 600 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 20 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 97 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 97 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 106 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 106 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 45): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 561 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 561 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 562 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 562 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 563 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 563 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 576 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 576 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 576 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 576 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 577 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 577 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 577 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 577 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 585 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 586 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 587 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 589 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 589 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 590 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 590 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 591 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 591 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 593 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 593 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 594 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 594 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 595 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 595 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 598 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 598 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 599 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 599 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 600 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 600 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 20 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
gmake[1]: 'empty_sysconfig_337zwt.out' is up to date.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
gmake[1]: 'empty_sysconfig_337zwt.out' is up to date.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 20 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.2/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Clean-only build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 clean -O 
 
DEL /F  "syscfg\board.h" "syscfg\pinmux.csv"  "empty_sysconfig_337zwt.hex"  "syscfg\board.c"  "empty_sysconfig_337zwt.out" 
DEL /F "syscfg\board.obj" "main.obj" "nokia_5110.obj" "pid.obj" "protect.obj" "transform.obj" "device\F2837xD_CodeStartBranch.obj" "device\device.obj" 
DEL /F "syscfg\board.d" "main.d" "nokia_5110.d" "pid.d" "protect.d" "transform.d" "device\device.d" 
DEL /F "device\F2837xD_CodeStartBranch.d" 
RMDIR /S/Q  "syscfg\" 
找不到 D:\CCS_workspace\Inversion_3Phase_1.3\empty_sysconfig_337zwt\CPU1_RAM\empty_sysconfig_337zwt.hex
找不到 D:\CCS_workspace\Inversion_3Phase_1.3\empty_sysconfig_337zwt\CPU1_RAM\device\F2837xD_CodeStartBranch.d
Finished clean
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../c2000.syscfg"
Invoking: SysConfig
"D:/CCS/ccs/utils/sysconfig_1.9.0/sysconfig_cli.bat" -s "D:/CCS/C2000Ware_3_04_00_00_Software/.metadata/sdk.json" -d "F2837xD" --script "D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/c2000.syscfg" -o "syscfg" --package F2837xD_337ZWT --part F2837xD_337ZWT --compiler ccs
Running script...
Validating...
Generating Code (c2000.syscfg)...
Writing D:\CCS_workspace\Inversion_3Phase_1.3\empty_sysconfig_337zwt\CPU1_RAM\syscfg\board.c...
Writing D:\CCS_workspace\Inversion_3Phase_1.3\empty_sysconfig_337zwt\CPU1_RAM\syscfg\board.h...
Writing D:\CCS_workspace\Inversion_3Phase_1.3\empty_sysconfig_337zwt\CPU1_RAM\syscfg\pinmux.csv...
Finished building: "../c2000.syscfg"
 
Building file: "../device/F2837xD_CodeStartBranch.asm"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="device/F2837xD_CodeStartBranch.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/CPU1_RAM/syscfg" --obj_directory="device"  "../device/F2837xD_CodeStartBranch.asm"
Finished building: "../device/F2837xD_CodeStartBranch.asm"
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 20 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building file: "../protect.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="protect.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../protect.c"
"../protect.c", line 6 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../protect.c", line 6 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../protect.c", line 6 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../protect.c", line 8 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../protect.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../protect.c"
 
Building file: "syscfg/board.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="syscfg/board.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/CPU1_RAM/syscfg" --obj_directory="syscfg"  "syscfg/board.c"
Finished building: "syscfg/board.c"
 
Building file: "../nokia_5110.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="nokia_5110.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../nokia_5110.c"
"../nokia_5110.c", line 383 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../nokia_5110.c", line 383 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../nokia_5110.c"
 
Building file: "../transform.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="transform.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../transform.c"
"../transform.c", line 26 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 27 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 27 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 27 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 30 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 30 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 37 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 39 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 39 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 39 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 39 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 42 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 42 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 43 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 43 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 13): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for cosf.
"../transform.c", line 50 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 30): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for sinf.
"../transform.c", line 51 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 51 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 51 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 51 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 51 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 51 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 53 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 53 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 54 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 54 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 62 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 62 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 62 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 62 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 62 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 62 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 64 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 64 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 65 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 65 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../transform.c"
 
Building file: "../device/device.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="device/device.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/CPU1_RAM/syscfg" --obj_directory="device"  "../device/device.c"
Finished building: "../device/device.c"
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 97 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 97 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 106 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 106 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 45): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 561 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 561 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 562 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 562 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 563 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 563 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 576 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 576 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 576 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 576 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 577 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 577 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 577 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 577 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 585 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 586 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 587 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 589 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 589 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 590 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 590 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 591 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 591 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 593 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 593 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 594 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 594 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 595 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 595 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 598 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 598 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 599 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 599 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 600 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 600 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 602 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 602 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 602 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 602 (col. 16): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for FP division.
"../main.c", line 602 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 602 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 97 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 97 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 106 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 106 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 45): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 561 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 561 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 562 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 562 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 563 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 563 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 576 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 576 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 576 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 576 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 577 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 577 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 577 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 577 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 585 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 586 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 587 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 589 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 589 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 590 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 590 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 591 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 591 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 593 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 593 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 594 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 594 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 595 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 595 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 598 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 598 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 599 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 599 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 600 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 600 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 602 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 602 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 602 (col. 22): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for FP division.
"../main.c", line 602 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 602 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
gmake[1]: 'empty_sysconfig_337zwt.out' is up to date.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
gmake[1]: 'empty_sysconfig_337zwt.out' is up to date.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
gmake[1]: 'empty_sysconfig_337zwt.out' is up to date.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 97 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 97 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 106 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 106 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 45): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 563 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 563 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 563 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 563 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 564 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 564 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 565 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 565 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 566 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 566 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 579 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 579 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 579 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 579 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 580 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 580 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 580 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 580 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 588 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 589 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 590 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 592 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 592 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 593 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 593 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 594 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 594 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 596 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 596 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 597 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 597 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 598 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 598 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 601 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 601 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 602 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 602 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 603 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 603 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 605 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 605 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 605 (col. 22): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for FP division.
"../main.c", line 605 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 605 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 97 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 97 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 106 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 106 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 45): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 563 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 563 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 563 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 563 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 564 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 564 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 565 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 565 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 566 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 566 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 579 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 579 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 579 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 579 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 580 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 580 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 580 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 580 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 588 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 589 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 590 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 592 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 592 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 593 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 593 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 594 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 594 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 596 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 596 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 597 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 597 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 598 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 598 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 601 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 601 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 602 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 602 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 603 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 603 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 605 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 605 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 605 (col. 22): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for FP division.
"../main.c", line 605 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 605 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 97 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 97 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 106 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 106 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 45): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 563 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 563 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 563 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 563 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 564 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 564 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 565 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 565 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 566 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 566 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 579 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 579 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 579 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 579 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 580 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 580 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 580 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 580 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 588 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 589 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 590 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 592 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 592 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 593 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 593 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 594 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 594 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 596 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 596 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 597 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 597 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 598 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 598 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 601 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 601 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 602 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 602 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 603 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 603 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 605 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 605 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 605 (col. 22): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for FP division.
"../main.c", line 605 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 605 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "syscfg/board.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="syscfg/board.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/CPU1_RAM/syscfg" --obj_directory="syscfg"  "syscfg/board.c"
Finished building: "syscfg/board.c"
 
Building file: "../nokia_5110.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="nokia_5110.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../nokia_5110.c"
"../nokia_5110.c", line 383 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../nokia_5110.c", line 383 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../nokia_5110.c"
 
Building file: "../device/device.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="device/device.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/CPU1_RAM/syscfg" --obj_directory="device"  "../device/device.c"
Finished building: "../device/device.c"
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 97 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 97 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 106 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 106 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 45): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 563 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 563 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 563 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 563 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 564 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 564 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 565 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 565 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 566 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 566 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 579 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 579 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 579 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 579 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 580 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 580 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 580 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 580 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 588 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 589 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 590 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 592 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 592 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 593 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 593 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 594 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 594 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 596 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 596 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 597 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 597 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 598 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 598 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 601 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 601 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 602 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 602 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 603 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 603 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 605 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 605 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 605 (col. 22): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for FP division.
"../main.c", line 605 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 605 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
gmake[1]: 'empty_sysconfig_337zwt.out' is up to date.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 97 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 97 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 106 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 106 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 45): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 563 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 563 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 563 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 563 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 564 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 564 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 565 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 565 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 566 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 566 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 579 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 579 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 579 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 579 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 580 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 580 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 580 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 580 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 588 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 589 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 590 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 592 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 592 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 593 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 593 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 594 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 594 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 596 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 596 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 597 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 597 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 598 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 598 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 601 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 601 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 602 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 602 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 603 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 603 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 605 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 605 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 605 (col. 22): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for FP division.
"../main.c", line 605 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 605 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 97 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 97 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 106 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 106 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 45): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 563 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 563 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 563 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 563 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 564 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 564 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 565 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 565 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 566 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 566 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 579 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 579 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 579 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 579 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 580 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 580 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 580 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 580 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 588 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 589 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 590 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 592 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 592 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 593 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 593 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 594 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 594 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 596 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 596 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 597 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 597 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 598 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 598 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 601 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 601 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 602 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 602 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 603 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 603 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 605 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 605 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 605 (col. 22): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for FP division.
"../main.c", line 605 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 605 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 97 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 97 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 106 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 106 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 45): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 563 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 563 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 563 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 563 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 564 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 564 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 565 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 565 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 566 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 566 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 579 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 579 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 579 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 579 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 580 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 580 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 580 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 580 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 588 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 589 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 590 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 592 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 592 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 593 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 593 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 594 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 594 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 596 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 596 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 597 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 597 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 598 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 598 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 601 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 601 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 602 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 602 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 603 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 603 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 605 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 605 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 605 (col. 22): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for FP division.
"../main.c", line 605 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 605 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 97 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 97 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 106 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 106 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 45): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 563 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 563 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 563 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 563 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 564 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 564 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 565 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 565 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 566 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 566 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 579 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 579 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 579 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 579 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 580 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 580 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 580 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 580 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 588 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 589 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 590 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 592 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 592 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 593 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 593 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 594 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 594 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 596 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 596 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 597 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 597 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 598 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 598 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 601 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 601 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 602 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 602 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 603 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 603 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 605 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 605 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 605 (col. 22): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for FP division.
"../main.c", line 605 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 605 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 97 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 97 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 106 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 106 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 518 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 45): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 97 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 97 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 106 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 106 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 45): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.3/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Clean-only build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 clean -O 
 
DEL /F  "syscfg\board.h" "syscfg\pinmux.csv"  "empty_sysconfig_337zwt.hex"  "syscfg\board.c"  "empty_sysconfig_337zwt.out" 
DEL /F "syscfg\board.obj" "main.obj" "nokia_5110.obj" "pid.obj" "protect.obj" "transform.obj" "device\F2837xD_CodeStartBranch.obj" "device\device.obj" 
DEL /F "syscfg\board.d" "main.d" "nokia_5110.d" "pid.d" "protect.d" "transform.d" "device\device.d" 
DEL /F "device\F2837xD_CodeStartBranch.d" 
RMDIR /S/Q  "syscfg\" 
找不到 D:\CCS_workspace\Inversion_3Phase_1.4\empty_sysconfig_337zwt\CPU1_RAM\empty_sysconfig_337zwt.hex
找不到 D:\CCS_workspace\Inversion_3Phase_1.4\empty_sysconfig_337zwt\CPU1_RAM\device\F2837xD_CodeStartBranch.d
Finished clean
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../c2000.syscfg"
Invoking: SysConfig
"D:/CCS/ccs/utils/sysconfig_1.9.0/sysconfig_cli.bat" -s "D:/CCS/C2000Ware_3_04_00_00_Software/.metadata/sdk.json" -d "F2837xD" --script "D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/c2000.syscfg" -o "syscfg" --package F2837xD_337ZWT --part F2837xD_337ZWT --compiler ccs
Running script...
Validating...
Generating Code (c2000.syscfg)...
Writing D:\CCS_workspace\Inversion_3Phase_1.4\empty_sysconfig_337zwt\CPU1_RAM\syscfg\board.c...
Writing D:\CCS_workspace\Inversion_3Phase_1.4\empty_sysconfig_337zwt\CPU1_RAM\syscfg\board.h...
Writing D:\CCS_workspace\Inversion_3Phase_1.4\empty_sysconfig_337zwt\CPU1_RAM\syscfg\pinmux.csv...
Finished building: "../c2000.syscfg"
 
Building file: "../nokia_5110.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="nokia_5110.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../nokia_5110.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'nokia_5110.obj' failed
"../nokia_5110.c", line 333: error #148: declaration is incompatible with "void LCD_write_byte(unsigned char, unsigned char)" (declared at line 15 of "D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/nokia_5110.h")
1 error detected in the compilation of "../nokia_5110.c".
gmake: *** [nokia_5110.obj] Error 1
Building file: "../protect.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="protect.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../protect.c"
"../protect.c", line 6 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../protect.c", line 6 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../protect.c", line 6 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../protect.c", line 8 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../protect.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../protect.c"
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 20 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building file: "../device/F2837xD_CodeStartBranch.asm"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="device/F2837xD_CodeStartBranch.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/CPU1_RAM/syscfg" --obj_directory="device"  "../device/F2837xD_CodeStartBranch.asm"
Finished building: "../device/F2837xD_CodeStartBranch.asm"
 
Building file: "syscfg/board.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="syscfg/board.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/CPU1_RAM/syscfg" --obj_directory="syscfg"  "syscfg/board.c"
Finished building: "syscfg/board.c"
 
Building file: "../transform.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="transform.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../transform.c"
"../transform.c", line 26 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 27 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 27 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 27 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 30 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 30 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 37 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 39 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 39 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 39 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 39 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 42 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 42 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 43 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 43 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 13): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for cosf.
"../transform.c", line 50 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 30): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for sinf.
"../transform.c", line 51 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 51 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 51 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 51 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 51 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 51 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 53 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 53 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 54 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 54 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 62 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 62 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 62 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 62 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 62 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 62 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 64 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 64 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 65 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 65 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../transform.c"
 
Building file: "../device/device.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="device/device.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/CPU1_RAM/syscfg" --obj_directory="device"  "../device/device.c"
Finished building: "../device/device.c"
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 97 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 97 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 106 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 106 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 45): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 556 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 556 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 556 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 556 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 557 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 557 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 557 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 557 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 558 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 558 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 558 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 558 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 565 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 565 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 565 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 565 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 566 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 566 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 567 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 567 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 568 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 568 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 581 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 581 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 581 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 581 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 582 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 582 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 582 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 582 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 590 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 591 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 592 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 594 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 594 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 595 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 595 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 596 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 596 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 598 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 598 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 599 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 599 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 600 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 600 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 603 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 603 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 604 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 604 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 605 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 605 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 607 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 607 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 607 (col. 22): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for FP division.
"../main.c", line 607 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 607 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
gmake: Target 'all' not remade because of errors.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../protect.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="protect.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../protect.c"
"../protect.c", line 6 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../protect.c", line 6 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../protect.c", line 6 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../protect.c", line 8 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../protect.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../protect.c"
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 20 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building file: "syscfg/board.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="syscfg/board.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/CPU1_RAM/syscfg" --obj_directory="syscfg"  "syscfg/board.c"
Finished building: "syscfg/board.c"
 
Building file: "../transform.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="transform.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../transform.c"
"../transform.c", line 26 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 27 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 27 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 27 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 30 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 30 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 37 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 39 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 39 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 39 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 39 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 42 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 42 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 43 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 43 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 13): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for cosf.
"../transform.c", line 50 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 30): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for sinf.
"../transform.c", line 51 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 51 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 51 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 51 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 51 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 51 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 53 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 53 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 54 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 54 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 62 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 62 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 62 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 62 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 62 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 62 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 64 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 64 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 65 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 65 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../transform.c"
 
Building file: "../nokia_5110.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="nokia_5110.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../nokia_5110.c"
"../nokia_5110.c", line 390 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../nokia_5110.c", line 390 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../nokia_5110.c"
 
Building file: "../device/device.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="device/device.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/CPU1_RAM/syscfg" --obj_directory="device"  "../device/device.c"
Finished building: "../device/device.c"
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 97 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 97 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 106 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 106 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 519 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 520 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 521 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 45): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 522 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 556 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 556 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 556 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 556 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 557 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 557 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 557 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 557 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 558 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 558 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 558 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 558 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 565 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 565 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 565 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 565 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 566 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 566 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 567 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 567 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 568 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 568 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 581 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 581 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 581 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 581 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 582 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 582 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 582 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 582 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 590 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 591 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 592 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 594 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 594 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 595 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 595 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 596 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 596 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 598 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 598 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 599 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 599 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 600 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 600 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 603 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 603 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 604 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 604 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 605 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 605 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 607 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 607 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 607 (col. 22): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for FP division.
"../main.c", line 607 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 607 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
gmake[1]: 'empty_sysconfig_337zwt.out' is up to date.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../transform.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="transform.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../transform.c"
"../transform.c", line 26 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 27 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 27 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 27 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 30 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 30 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 37 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 41): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 39 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 39 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 39 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 39 (col. 41): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 42 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 42 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 43 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 43 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 13): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for cosf.
"../transform.c", line 50 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 30): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for sinf.
"../transform.c", line 51 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 51 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 51 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 51 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 51 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 51 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 53 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 53 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 54 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 54 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 62 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 62 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 62 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 62 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 62 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 62 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 64 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 64 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 65 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 65 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../transform.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../transform.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="transform.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../transform.c"
"../transform.c", line 26 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 27 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 27 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 27 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 30 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 30 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 37 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 39 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 39 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 39 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 39 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 42 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 42 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 43 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 43 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 13): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for cosf.
"../transform.c", line 50 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 30): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for sinf.
"../transform.c", line 51 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 51 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 51 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 51 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 51 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 51 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 53 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 53 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 54 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 54 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 62 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 62 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 62 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 62 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 62 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 62 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 64 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 64 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 65 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 65 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../transform.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../transform.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="transform.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../transform.c"
"../transform.c", line 25 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 28 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 28 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 36 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 37 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 37 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 37 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 37 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 40 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 40 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 42 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 42 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 13): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for cosf.
"../transform.c", line 49 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 30): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for sinf.
"../transform.c", line 50 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 52 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 52 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 53 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 53 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 63 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 63 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 64 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 64 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../transform.c"
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 97 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 97 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 106 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 106 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 45): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 529 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 529 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 529 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 529 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 529 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 529 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 561 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 561 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 561 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 561 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 562 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 562 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 562 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 562 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 569 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 569 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 569 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 569 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 570 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 570 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 571 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 571 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 572 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 572 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 585 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 585 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 585 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 585 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 586 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 586 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 586 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 586 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 594 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 595 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 596 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 598 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 598 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 599 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 599 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 600 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 600 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 602 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 602 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 603 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 603 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 604 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 604 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 607 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 607 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 608 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 608 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 609 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 609 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 611 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 611 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 611 (col. 22): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for FP division.
"../main.c", line 611 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 611 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 97 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 97 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 106 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 106 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 45): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 529 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 529 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 529 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 529 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 529 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 529 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 561 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 561 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 561 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 561 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 562 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 562 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 562 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 562 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 569 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 569 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 569 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 569 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 570 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 570 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 571 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 571 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 572 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 572 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 585 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 585 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 585 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 585 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 586 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 586 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 586 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 586 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 594 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 595 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 596 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 598 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 598 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 599 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 599 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 600 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 600 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 602 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 602 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 603 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 603 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 604 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 604 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 607 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 607 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 608 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 608 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 609 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 609 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 611 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 611 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 611 (col. 22): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for FP division.
"../main.c", line 611 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 611 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 97 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 97 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 106 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 106 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 45): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 529 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 529 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 529 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 529 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 529 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 529 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 561 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 561 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 561 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 561 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 562 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 562 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 562 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 562 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 569 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 569 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 569 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 569 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 570 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 570 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 571 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 571 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 572 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 572 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 585 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 585 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 585 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 585 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 586 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 586 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 586 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 586 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 594 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 595 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 596 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 598 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 598 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 599 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 599 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 600 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 600 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 602 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 602 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 603 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 603 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 604 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 604 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 607 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 607 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 608 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 608 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 609 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 609 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 611 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 611 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 611 (col. 22): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for FP division.
"../main.c", line 611 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 611 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 97 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 97 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 106 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 106 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 45): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 529 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 529 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 529 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 529 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 529 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 529 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 561 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 561 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 561 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 561 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 562 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 562 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 562 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 562 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 569 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 569 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 569 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 569 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 570 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 570 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 571 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 571 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 572 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 572 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 585 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 585 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 585 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 585 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 586 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 586 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 586 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 586 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 594 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 595 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 596 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 598 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 598 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 599 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 599 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 600 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 600 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 602 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 602 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 603 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 603 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 604 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 604 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 607 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 607 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 608 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 608 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 609 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 609 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 611 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 611 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 611 (col. 22): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for FP division.
"../main.c", line 611 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 611 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 97 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 97 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 106 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 106 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 45): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 529 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 529 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 529 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 529 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 529 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 529 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 561 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 561 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 561 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 561 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 562 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 562 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 562 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 562 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 569 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 569 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 569 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 569 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 570 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 570 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 571 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 571 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 572 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 572 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 585 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 585 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 585 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 585 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 586 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 586 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 586 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 586 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 594 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 595 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 596 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 598 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 598 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 599 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 599 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 600 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 600 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 602 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 602 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 603 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 603 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 604 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 604 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 607 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 607 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 608 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 608 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 609 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 609 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 611 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 611 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 611 (col. 22): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for FP division.
"../main.c", line 611 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 611 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 97 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 97 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 106 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 106 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 523 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 524 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 45): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 529 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 529 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 529 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 529 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 529 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 529 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 560 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 561 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 561 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 561 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 561 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 562 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 562 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 562 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 562 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 569 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 569 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 569 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 569 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 570 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 570 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 571 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 571 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 572 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 572 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 585 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 585 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 585 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 585 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 586 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 586 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 586 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 586 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 594 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 595 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 596 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 598 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 598 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 599 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 599 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 600 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 600 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 602 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 602 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 603 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 603 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 604 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 604 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 607 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 607 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 608 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 608 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 609 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 609 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 611 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 611 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 611 (col. 22): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for FP division.
"../main.c", line 611 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 611 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'main.obj' failed
"../main.c", line 581: error #32: expression must have arithmetic type
1 error detected in the compilation of "../main.c".
gmake: *** [main.obj] Error 1
gmake: Target 'all' not remade because of errors.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'main.obj' failed
"../main.c", line 581: error #32: expression must have arithmetic type
1 error detected in the compilation of "../main.c".
gmake: *** [main.obj] Error 1
gmake: Target 'all' not remade because of errors.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 99 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 99 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 108 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 108 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 45): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 529 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 529 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 529 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 529 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 529 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 529 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 530 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 530 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 530 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 530 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 530 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 530 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 531 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 531 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 531 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 531 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 531 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 531 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 562 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 562 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 562 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 562 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 563 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 563 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 563 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 563 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 564 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 564 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 564 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 564 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 571 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 571 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 571 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 571 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 572 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 572 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 573 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 573 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 574 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 574 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 585 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 585 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 585 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 594 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 594 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 594 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 594 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 595 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 595 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 595 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 595 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 603 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 604 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 605 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 607 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 607 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 608 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 608 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 609 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 609 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 611 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 611 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 612 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 612 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 613 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 613 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 616 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 616 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 617 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 617 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 618 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 618 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 620 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 620 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 620 (col. 22): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for FP division.
"../main.c", line 620 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 620 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
gmake[1]: 'empty_sysconfig_337zwt.out' is up to date.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 99 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 99 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 108 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 108 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 525 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 45): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 529 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 529 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 529 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 529 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 529 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 529 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 530 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 530 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 530 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 530 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 530 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 530 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 531 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 531 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 531 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 531 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 531 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 531 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 562 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 562 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 562 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 562 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 563 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 563 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 563 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 563 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 564 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 564 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 564 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 564 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 571 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 571 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 571 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 571 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 572 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 572 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 573 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 573 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 574 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 574 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 585 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 585 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 585 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 595 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 595 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 595 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 595 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 596 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 596 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 596 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 596 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 604 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 605 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 606 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 608 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 608 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 609 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 609 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 610 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 610 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 612 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 612 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 613 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 613 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 614 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 614 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 617 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 617 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 618 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 618 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 619 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 619 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 621 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 621 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 621 (col. 22): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for FP division.
"../main.c", line 621 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 621 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
gmake[1]: 'empty_sysconfig_337zwt.out' is up to date.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../nokia_5110.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="nokia_5110.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../nokia_5110.c"
"../nokia_5110.c", line 390 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../nokia_5110.c", line 390 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../nokia_5110.c"
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 99 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 99 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 108 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 108 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 526 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 527 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 528 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 529 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 529 (col. 45): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 529 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 529 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 529 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 529 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 530 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 530 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 530 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 530 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 530 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 530 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 531 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 531 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 531 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 531 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 531 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 531 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 532 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 532 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 532 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 532 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 532 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 532 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 563 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 563 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 563 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 563 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 564 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 564 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 564 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 564 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 565 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 565 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 565 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 565 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 572 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 572 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 572 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 572 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 573 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 573 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 574 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 574 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 575 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 575 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 586 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 586 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 586 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 596 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 596 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 596 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 596 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 597 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 597 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 597 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 597 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 605 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 606 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 607 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 609 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 609 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 610 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 610 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 611 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 611 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 613 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 613 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 614 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 614 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 615 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 615 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 618 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 618 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 619 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 619 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 620 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 620 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 622 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 622 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 622 (col. 22): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for FP division.
"../main.c", line 622 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 622 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../nokia_5110.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="nokia_5110.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../nokia_5110.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'nokia_5110.obj' failed
"../nokia_5110.c", line 103: error #171: expected a declaration
"../nokia_5110.c", line 103: error #171: expected a declaration
"../nokia_5110.c", line 150: warning #12-D: parsing restarts here after previous syntax error
"../nokia_5110.c", line 323: error #20: identifier "write_chinese" is undefined
3 errors detected in the compilation of "../nokia_5110.c".
gmake: *** [nokia_5110.obj] Error 1
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 104 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 104 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 113 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 113 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 531 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 531 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 531 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 531 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 531 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 531 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 532 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 532 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 532 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 532 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 532 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 532 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 533 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 533 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 533 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 533 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 533 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 533 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 534 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 534 (col. 45): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 534 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 534 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 534 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 534 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 536 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 536 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 536 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 536 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 536 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 536 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 537 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 537 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 537 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 537 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 537 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 537 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 568 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 568 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 568 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 568 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 569 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 569 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 569 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 569 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 570 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 570 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 570 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 570 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 577 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 577 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 577 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 577 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 578 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 578 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 579 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 579 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 580 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 580 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 591 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 591 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 591 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 601 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 601 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 601 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 601 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 602 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 602 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 602 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 602 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 610 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 611 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 612 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 614 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 614 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 615 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 615 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 616 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 616 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 618 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 618 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 619 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 619 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 620 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 620 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 623 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 623 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 624 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 624 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 625 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 625 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 627 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 627 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 627 (col. 22): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for FP division.
"../main.c", line 627 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 627 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../main.c"
 
gmake: Target 'all' not remade because of errors.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../nokia_5110.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="nokia_5110.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../nokia_5110.c"
"../nokia_5110.c", line 390 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../nokia_5110.c", line 390 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../nokia_5110.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 20 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 20 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 8 all -O 
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/device" --include_path="D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 20 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS_workspace/Inversion_3Phase_1.4/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Clean-only build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 clean -O 
 
DEL /F  "syscfg\board.h" "syscfg\pinmux.csv"  "empty_sysconfig_337zwt.hex"  "syscfg\board.c"  "empty_sysconfig_337zwt.out" 
DEL /F "syscfg\board.obj" "main.obj" "nokia_5110.obj" "pid.obj" "protect.obj" "transform.obj" "device\F2837xD_CodeStartBranch.obj" "device\device.obj" 
DEL /F "syscfg\board.d" "main.d" "nokia_5110.d" "pid.d" "protect.d" "transform.d" "device\device.d" 
DEL /F "device\F2837xD_CodeStartBranch.d" 
RMDIR /S/Q  "syscfg\" 
找不到 D:\CCS\workSpace\DSP\PLL\empty_sysconfig_337zwt\CPU1_RAM\empty_sysconfig_337zwt.hex
找不到 D:\CCS\workSpace\DSP\PLL\empty_sysconfig_337zwt\CPU1_RAM\device\F2837xD_CodeStartBranch.d
Finished clean
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../c2000.syscfg"
Invoking: SysConfig
"D:/CCS/ccs/utils/sysconfig_1.9.0/sysconfig_cli.bat" -s "D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/.metadata/sdk.json" -d "F2837xD" --script "D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt/c2000.syscfg" -o "syscfg" --package F2837xD_337ZWT --part F2837xD_337ZWT --compiler ccs
Running script...
Validating...
Generating Code (c2000.syscfg)...
Writing D:\CCS\workSpace\DSP\PLL\empty_sysconfig_337zwt\CPU1_RAM\syscfg\board.c...
Writing D:\CCS\workSpace\DSP\PLL\empty_sysconfig_337zwt\CPU1_RAM\syscfg\board.h...
Writing D:\CCS\workSpace\DSP\PLL\empty_sysconfig_337zwt\CPU1_RAM\syscfg\pinmux.csv...
Finished building: "../c2000.syscfg"
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'main.obj' failed
"../main.c", line 577: error #20: identifier "w" is undefined
1 error detected in the compilation of "../main.c".
gmake: *** [main.obj] Error 1
Building file: "../transform.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="transform.d_raw" --include_path="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../transform.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'transform.obj' failed
"../transform.c", line 49: error #20: identifier "Ts" is undefined
"../transform.c", line 60: error #20: identifier "Ts" is undefined
2 errors detected in the compilation of "../transform.c".
gmake: *** [transform.obj] Error 1
Building file: "../pll.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pll.d_raw" --include_path="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pll.c"
Finished building: "../pll.c"
 
Building file: "syscfg/board.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="syscfg/board.d_raw" --include_path="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt/CPU1_RAM/syscfg" --obj_directory="syscfg"  "syscfg/board.c"
Finished building: "syscfg/board.c"
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 9 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 11 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 13 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 20 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 24 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 28 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 29 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building file: "../protect.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="protect.d_raw" --include_path="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../protect.c"
"../protect.c", line 6 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../protect.c", line 6 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../protect.c", line 6 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../protect.c", line 8 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../protect.c", line 12 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../protect.c"
 
Building file: "../device/F2837xD_CodeStartBranch.asm"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="device/F2837xD_CodeStartBranch.d_raw" --include_path="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt/CPU1_RAM/syscfg" --obj_directory="device"  "../device/F2837xD_CodeStartBranch.asm"
Finished building: "../device/F2837xD_CodeStartBranch.asm"
 
Building file: "../nokia_5110.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="nokia_5110.d_raw" --include_path="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../nokia_5110.c"
"../nokia_5110.c", line 390 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../nokia_5110.c", line 390 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../nokia_5110.c"
 
Building file: "../device/device.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="device/device.d_raw" --include_path="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt/CPU1_RAM/syscfg" --obj_directory="device"  "../device/device.c"
Finished building: "../device/device.c"
 
gmake: Target 'all' not remade because of errors.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'main.obj' failed
"../main.c", line 52: error #41: expected an identifier
"../main.c", line 53: error #20: identifier "pi" is undefined
"../main.c", line 53: error #28: expression must have a constant value
3 errors detected in the compilation of "../main.c".
gmake: *** [main.obj] Error 1
Building file: "../transform.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="transform.d_raw" --include_path="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../transform.c"
"../transform.c", line 25 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 38): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 25 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 26 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 28 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 28 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 29 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 36 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 37 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 37 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 37 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 37 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 38 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 40 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 40 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 41 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 42 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 42 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 21): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 13): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for cosf.
"../transform.c", line 49 (col. 41): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 49 (col. 33): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for sinf.
"../transform.c", line 50 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 31): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 50 (col. 36): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 52 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 52 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 53 (col. 13): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 53 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 41): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 60 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 41): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 61 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 63 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 63 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 64 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../transform.c", line 64 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../transform.c"
 
gmake: Target 'all' not remade because of errors.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'main.obj' failed
"../main.c", line 53: error #28: expression must have a constant value
1 error detected in the compilation of "../main.c".
gmake: *** [main.obj] Error 1
gmake: Target 'all' not remade because of errors.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'main.obj' failed
"../main.c", line 53: error #28: expression must have a constant value
1 error detected in the compilation of "../main.c".
gmake: *** [main.obj] Error 1
gmake: Target 'all' not remade because of errors.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 108 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 108 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 117 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 117 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 536 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 536 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 536 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 536 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 536 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 536 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 537 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 537 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 537 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 537 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 537 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 537 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 538 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 538 (col. 45): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 538 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 538 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 538 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 538 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 540 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 540 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 540 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 540 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 540 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 540 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 541 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 541 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 541 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 541 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 541 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 541 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 572 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 572 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 572 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 572 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 573 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 573 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 573 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 573 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 574 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 574 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 574 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 574 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 582 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 582 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 583 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 583 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 584 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 584 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 595 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 595 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 595 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 605 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 605 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 605 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 605 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 606 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 606 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 606 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 606 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 614 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 615 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 616 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 618 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 618 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 619 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 619 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 620 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 620 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 622 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 622 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 623 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 623 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 624 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 624 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 627 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 627 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 628 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 628 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 629 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 629 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 631 (col. 22): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for FP division.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./pll.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../pll.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pll.d_raw" --include_path="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pll.c"
Finished building: "../pll.c"
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 12 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 20 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 21 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 21 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 21 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 22 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 22 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 22 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 23 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 35 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 37 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 36 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 35 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 36 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 37 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'main.obj' failed
"../main.c", line 598: error #20: identifier "pidTheta" is undefined
1 error detected in the compilation of "../main.c".
gmake: *** [main.obj] Error 1
gmake: Target 'all' not remade because of errors.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
 
>> Compilation failure
subdir_rules.mk:28: recipe for target 'main.obj' failed
"../main.c", line 598: error #20: identifier "pidTheta" is undefined
1 error detected in the compilation of "../main.c".
gmake: *** [main.obj] Error 1
gmake: Target 'all' not remade because of errors.

**** Build Finished ****

**** Build of configuration CPU1_RAM for project empty_sysconfig_337zwt ****

"D:\\CCS\\ccs\\utils\\bin\\gmake" -k -j 16 all -O 
 
Building file: "../pll.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pll.d_raw" --include_path="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pll.c"
Finished building: "../pll.c"
 
Building file: "../pid.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="pid.d_raw" --include_path="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../pid.c"
"../pid.c", line 12 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 12 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 14 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 15 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 16 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 17 (col. 9): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 18 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 19 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 20 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 21 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 21 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 21 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 22 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 22 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 22 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 23 (col. 10): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 27 (col. 8): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 30 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 31 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 12): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 32 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 33 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 34 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 35 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 37 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 36 (col. 5): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 35 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 36 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../pid.c", line 37 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
Finished building: "../pid.c"
 
Building file: "../main.c"
Invoking: C2000 Compiler
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --include_path="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt" --include_path="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt/device" --include_path="D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib" --include_path="D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --preinclude="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi --preproc_with_compile --preproc_dependency="main.d_raw" --include_path="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt/CPU1_RAM/syscfg"  "../main.c"
"../main.c", line 108 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 108 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 117 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 117 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 535 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 536 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 536 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 536 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 536 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 536 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 536 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 537 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 537 (col. 47): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 537 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 537 (col. 44): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 537 (col. 34): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 537 (col. 27): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 538 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 538 (col. 45): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 538 (col. 23): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 538 (col. 42): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 538 (col. 32): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 538 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 539 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 540 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 540 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 540 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 540 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 540 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 540 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 541 (col. 14): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 541 (col. 46): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 541 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 541 (col. 43): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 541 (col. 33): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 541 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 572 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 572 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 572 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 572 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 573 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 573 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 573 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 573 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 574 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 574 (col. 25): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 574 (col. 35): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 574 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 583 (col. 11): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 583 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 583 (col. 17): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 583 (col. 15): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 583 (col. 16): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 583 (col. 18): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 583 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 586 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 586 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 587 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 587 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 588 (col. 20): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 588 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 599 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 599 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 599 (col. 19): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 606 (col. 24): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 606 (col. 28): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 606 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 617 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 617 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 617 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 617 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 618 (col. 22): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 618 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 618 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 618 (col. 30): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 626 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 627 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 628 (col. 26): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 630 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 630 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 631 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 631 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 632 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 632 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 634 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 634 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 635 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 635 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 636 (col. 29): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 636 (col. 50): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 639 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 639 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 640 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 640 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 641 (col. 92): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 641 (col. 73): advice #3195-D: (Performance) EABI double precision is 64-bits as opposed to 32-bits for COFF. Consider changing doubles to floats for improved performance in FPU32-mode.
"../main.c", line 643 (col. 22): advice #2615-D: (Performance) Use --fp_mode=relaxed to enable TMU hardware support for FP division.
Finished building: "../main.c"
 
Building target: "empty_sysconfig_337zwt.out"
Invoking: C2000 Linker
"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/bin/cl2000" -v28 -ml -mt --cla_support=cla1 --float_support=fpu32 --tmu_support=tmu0 --vcu_support=vcu2 -Ooff --preinclude="D:/CCS/workSpace/DSP/PLL/empty_sysconfig_337zwt/nokia_5110.h" --define=DEBUG --define=CPU1 --diag_suppress=10063 --diag_warning=225 --diag_wrap=off --display_error_number --abi=eabi -z -m"empty_sysconfig_337zwt.map" --heap_size=0x200 --stack_size=0x3F8 --warn_sections -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/lib" -i"D:/CCS/ccs/tools/compiler/ti-cgt-c2000_20.2.5.LTS/include" --reread_libs --define=RAM --diag_wrap=off --display_error_number --xml_link_info="empty_sysconfig_337zwt_linkInfo.xml" --entry_point=code_start --rom_model -o "empty_sysconfig_337zwt.out" "./syscfg/board.obj" "./main.obj" "./nokia_5110.obj" "./pid.obj" "./pll.obj" "./protect.obj" "./transform.obj" "./device/F2837xD_CodeStartBranch.obj" "./device/device.obj" "../2837xD_RAM_lnk_cpu1.cmd" "D:/CCS/ccs/tools/compiler/C2000Ware_3_04_00_00_Software/driverlib/f2837xd/driverlib/ccs/Debug/driverlib.lib"  -llibc.a 
<Linking>
Finished building target: "empty_sysconfig_337zwt.out"
 

**** Build Finished ****
