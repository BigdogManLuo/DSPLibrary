#include"filter.h"
#include<stdio.h>
#include"pr.h"
#include<math.h>
#include"PLL.h"
#include"pid.h"
#include"transform.h"
#include"SOGI.h"

#define pi 3.14159

//鍒濆鍖朠ID鍙傛暟
PID pidTheta={0.3,150,0,0,0,0,0.0001};
//鍒濆鍖栭槦鍒楀弬鏁�
ButterQueue qVin={{0,0,0},0,0,0};
float SOS_PLL[6]={2.4286526673565359750288361606607,4.8573053347130719500576723213214,2.4286526673565359750288361606607,10000.0,-19681.059727680092485968543769559,9690.7743383495181799247575327172};
float scale_PLL=1;
//鍏ㄥ眬鍙橀噺瀹氫箟
Phase2 p2Vin={0,0};
dq dqVin={0,0};


int main()
{
//PID鎸囬拡鍒濆鍖�
PID* pPIDTheta=&pidTheta;
//闃熷垪鎸囬拡鍒濆鍖�
ButterQueue* pVin=&qVin;

//淇″彿瀹氫箟
float Vin=0;//杈撳叆鐢靛帇
float Va=0,Vb=0,Vc=0; //涓夌浉宸ラ浜ゆ祦鐢�
unsigned int f=50; //宸ラ
float Ts=0.0001;//閲囨牱鍛ㄦ湡
float Vin_beta=0;

//鏂囦欢鎸囬拡
FILE *p = fopen("data.txt", "w");
//鎵撳紑鏂囦欢
if(p == NULL)
{
    printf("open error!\n");
    return 0;
}

//閿佺浉鐜祴璇�
for (int i=0;i<=999;i++)
{
    Vin=6*sin(2*pi*f*i*Ts);
    Va=6*sin(2*pi*f*i*Ts);
    Vb=6*sin(2*pi*f*i*Ts+(2*pi/3));
    Vc=6*sin(2*pi*f*i*Ts+(4*pi/3));
    /*
    Phase3 p3Vin={Va,Vb,Vc};
    p2Vin=clarkTransformation(p3Vin);
    dqVin=parkTransformation(p2Vin,theta);

    //杩愯涓夌浉閿佺浉鐜�
    threePhasePLLCalc(pPIDTheta,dqVin.q);

    */
    //杩愯鍗曠浉閿佺浉鐜�
    singlePhasePLLCalc(pPIDTheta,Vin,pVin,SOS_PLL,scale_PLL);

    //鍐欐枃浠�
    /*
    //涓夌浉閿佺浉鐜祴璇�
    fprintf(p,"%f",Va);
    fprintf(p," ");
    fprintf(p,"%f",Vb);
    fprintf(p," ");
    fprintf(p,"%f",Vc);
    fprintf(p," ");
    fprintf(p,"%f",theta);
    fprintf(p,"\n");
    */
   //鍗曠浉閿佺浉鐜祴璇�
   fprintf(p,"%f",Vin);
   fprintf(p," ");
   fprintf(p,"%f",theta);
   fprintf(p,"\n");
}

}
